{"version":3,"file":"static/js/635.ae474726.chunk.js","mappings":"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","sources":["../node_modules/node_modules/codemirror/addon/search/searchcursor.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"))\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod)\n  else // Plain browser env\n    mod(CodeMirror)\n})(function(CodeMirror) {\n  \"use strict\"\n  var Pos = CodeMirror.Pos\n\n  function regexpFlags(regexp) {\n    var flags = regexp.flags\n    return flags != null ? flags : (regexp.ignoreCase ? \"i\" : \"\")\n      + (regexp.global ? \"g\" : \"\")\n      + (regexp.multiline ? \"m\" : \"\")\n  }\n\n  function ensureFlags(regexp, flags) {\n    var current = regexpFlags(regexp), target = current\n    for (var i = 0; i < flags.length; i++) if (target.indexOf(flags.charAt(i)) == -1)\n      target += flags.charAt(i)\n    return current == target ? regexp : new RegExp(regexp.source, target)\n  }\n\n  function maybeMultiline(regexp) {\n    return /\\\\s|\\\\n|\\n|\\\\W|\\\\D|\\[\\^/.test(regexp.source)\n  }\n\n  function searchRegexpForward(doc, regexp, start) {\n    regexp = ensureFlags(regexp, \"g\")\n    for (var line = start.line, ch = start.ch, last = doc.lastLine(); line <= last; line++, ch = 0) {\n      regexp.lastIndex = ch\n      var string = doc.getLine(line), match = regexp.exec(string)\n      if (match)\n        return {from: Pos(line, match.index),\n                to: Pos(line, match.index + match[0].length),\n                match: match}\n    }\n  }\n\n  function searchRegexpForwardMultiline(doc, regexp, start) {\n    if (!maybeMultiline(regexp)) return searchRegexpForward(doc, regexp, start)\n\n    regexp = ensureFlags(regexp, \"gm\")\n    var string, chunk = 1\n    for (var line = start.line, last = doc.lastLine(); line <= last;) {\n      // This grows the search buffer in exponentially-sized chunks\n      // between matches, so that nearby matches are fast and don't\n      // require concatenating the whole document (in case we're\n      // searching for something that has tons of matches), but at the\n      // same time, the amount of retries is limited.\n      for (var i = 0; i < chunk; i++) {\n        if (line > last) break\n        var curLine = doc.getLine(line++)\n        string = string == null ? curLine : string + \"\\n\" + curLine\n      }\n      chunk = chunk * 2\n      regexp.lastIndex = start.ch\n      var match = regexp.exec(string)\n      if (match) {\n        var before = string.slice(0, match.index).split(\"\\n\"), inside = match[0].split(\"\\n\")\n        var startLine = start.line + before.length - 1, startCh = before[before.length - 1].length\n        return {from: Pos(startLine, startCh),\n                to: Pos(startLine + inside.length - 1,\n                        inside.length == 1 ? startCh + inside[0].length : inside[inside.length - 1].length),\n                match: match}\n      }\n    }\n  }\n\n  function lastMatchIn(string, regexp, endMargin) {\n    var match, from = 0\n    while (from <= string.length) {\n      regexp.lastIndex = from\n      var newMatch = regexp.exec(string)\n      if (!newMatch) break\n      var end = newMatch.index + newMatch[0].length\n      if (end > string.length - endMargin) break\n      if (!match || end > match.index + match[0].length)\n        match = newMatch\n      from = newMatch.index + 1\n    }\n    return match\n  }\n\n  function searchRegexpBackward(doc, regexp, start) {\n    regexp = ensureFlags(regexp, \"g\")\n    for (var line = start.line, ch = start.ch, first = doc.firstLine(); line >= first; line--, ch = -1) {\n      var string = doc.getLine(line)\n      var match = lastMatchIn(string, regexp, ch < 0 ? 0 : string.length - ch)\n      if (match)\n        return {from: Pos(line, match.index),\n                to: Pos(line, match.index + match[0].length),\n                match: match}\n    }\n  }\n\n  function searchRegexpBackwardMultiline(doc, regexp, start) {\n    if (!maybeMultiline(regexp)) return searchRegexpBackward(doc, regexp, start)\n    regexp = ensureFlags(regexp, \"gm\")\n    var string, chunkSize = 1, endMargin = doc.getLine(start.line).length - start.ch\n    for (var line = start.line, first = doc.firstLine(); line >= first;) {\n      for (var i = 0; i < chunkSize && line >= first; i++) {\n        var curLine = doc.getLine(line--)\n        string = string == null ? curLine : curLine + \"\\n\" + string\n      }\n      chunkSize *= 2\n\n      var match = lastMatchIn(string, regexp, endMargin)\n      if (match) {\n        var before = string.slice(0, match.index).split(\"\\n\"), inside = match[0].split(\"\\n\")\n        var startLine = line + before.length, startCh = before[before.length - 1].length\n        return {from: Pos(startLine, startCh),\n                to: Pos(startLine + inside.length - 1,\n                        inside.length == 1 ? startCh + inside[0].length : inside[inside.length - 1].length),\n                match: match}\n      }\n    }\n  }\n\n  var doFold, noFold\n  if (String.prototype.normalize) {\n    doFold = function(str) { return str.normalize(\"NFD\").toLowerCase() }\n    noFold = function(str) { return str.normalize(\"NFD\") }\n  } else {\n    doFold = function(str) { return str.toLowerCase() }\n    noFold = function(str) { return str }\n  }\n\n  // Maps a position in a case-folded line back to a position in the original line\n  // (compensating for codepoints increasing in number during folding)\n  function adjustPos(orig, folded, pos, foldFunc) {\n    if (orig.length == folded.length) return pos\n    for (var min = 0, max = pos + Math.max(0, orig.length - folded.length);;) {\n      if (min == max) return min\n      var mid = (min + max) >> 1\n      var len = foldFunc(orig.slice(0, mid)).length\n      if (len == pos) return mid\n      else if (len > pos) max = mid\n      else min = mid + 1\n    }\n  }\n\n  function searchStringForward(doc, query, start, caseFold) {\n    // Empty string would match anything and never progress, so we\n    // define it to match nothing instead.\n    if (!query.length) return null\n    var fold = caseFold ? doFold : noFold\n    var lines = fold(query).split(/\\r|\\n\\r?/)\n\n    search: for (var line = start.line, ch = start.ch, last = doc.lastLine() + 1 - lines.length; line <= last; line++, ch = 0) {\n      var orig = doc.getLine(line).slice(ch), string = fold(orig)\n      if (lines.length == 1) {\n        var found = string.indexOf(lines[0])\n        if (found == -1) continue search\n        var start = adjustPos(orig, string, found, fold) + ch\n        return {from: Pos(line, adjustPos(orig, string, found, fold) + ch),\n                to: Pos(line, adjustPos(orig, string, found + lines[0].length, fold) + ch)}\n      } else {\n        var cutFrom = string.length - lines[0].length\n        if (string.slice(cutFrom) != lines[0]) continue search\n        for (var i = 1; i < lines.length - 1; i++)\n          if (fold(doc.getLine(line + i)) != lines[i]) continue search\n        var end = doc.getLine(line + lines.length - 1), endString = fold(end), lastLine = lines[lines.length - 1]\n        if (endString.slice(0, lastLine.length) != lastLine) continue search\n        return {from: Pos(line, adjustPos(orig, string, cutFrom, fold) + ch),\n                to: Pos(line + lines.length - 1, adjustPos(end, endString, lastLine.length, fold))}\n      }\n    }\n  }\n\n  function searchStringBackward(doc, query, start, caseFold) {\n    if (!query.length) return null\n    var fold = caseFold ? doFold : noFold\n    var lines = fold(query).split(/\\r|\\n\\r?/)\n\n    search: for (var line = start.line, ch = start.ch, first = doc.firstLine() - 1 + lines.length; line >= first; line--, ch = -1) {\n      var orig = doc.getLine(line)\n      if (ch > -1) orig = orig.slice(0, ch)\n      var string = fold(orig)\n      if (lines.length == 1) {\n        var found = string.lastIndexOf(lines[0])\n        if (found == -1) continue search\n        return {from: Pos(line, adjustPos(orig, string, found, fold)),\n                to: Pos(line, adjustPos(orig, string, found + lines[0].length, fold))}\n      } else {\n        var lastLine = lines[lines.length - 1]\n        if (string.slice(0, lastLine.length) != lastLine) continue search\n        for (var i = 1, start = line - lines.length + 1; i < lines.length - 1; i++)\n          if (fold(doc.getLine(start + i)) != lines[i]) continue search\n        var top = doc.getLine(line + 1 - lines.length), topString = fold(top)\n        if (topString.slice(topString.length - lines[0].length) != lines[0]) continue search\n        return {from: Pos(line + 1 - lines.length, adjustPos(top, topString, top.length - lines[0].length, fold)),\n                to: Pos(line, adjustPos(orig, string, lastLine.length, fold))}\n      }\n    }\n  }\n\n  function SearchCursor(doc, query, pos, options) {\n    this.atOccurrence = false\n    this.afterEmptyMatch = false\n    this.doc = doc\n    pos = pos ? doc.clipPos(pos) : Pos(0, 0)\n    this.pos = {from: pos, to: pos}\n\n    var caseFold\n    if (typeof options == \"object\") {\n      caseFold = options.caseFold\n    } else { // Backwards compat for when caseFold was the 4th argument\n      caseFold = options\n      options = null\n    }\n\n    if (typeof query == \"string\") {\n      if (caseFold == null) caseFold = false\n      this.matches = function(reverse, pos) {\n        return (reverse ? searchStringBackward : searchStringForward)(doc, query, pos, caseFold)\n      }\n    } else {\n      query = ensureFlags(query, \"gm\")\n      if (!options || options.multiline !== false)\n        this.matches = function(reverse, pos) {\n          return (reverse ? searchRegexpBackwardMultiline : searchRegexpForwardMultiline)(doc, query, pos)\n        }\n      else\n        this.matches = function(reverse, pos) {\n          return (reverse ? searchRegexpBackward : searchRegexpForward)(doc, query, pos)\n        }\n    }\n  }\n\n  SearchCursor.prototype = {\n    findNext: function() {return this.find(false)},\n    findPrevious: function() {return this.find(true)},\n\n    find: function(reverse) {\n      var head = this.doc.clipPos(reverse ? this.pos.from : this.pos.to);\n      if (this.afterEmptyMatch && this.atOccurrence) {\n        // do not return the same 0 width match twice\n        head = Pos(head.line, head.ch)\n        if (reverse) {\n          head.ch--;\n          if (head.ch < 0) {\n            head.line--;\n            head.ch = (this.doc.getLine(head.line) || \"\").length;\n          }\n        } else {\n          head.ch++;\n          if (head.ch > (this.doc.getLine(head.line) || \"\").length) {\n            head.ch = 0;\n            head.line++;\n          }\n        }\n        if (CodeMirror.cmpPos(head, this.doc.clipPos(head)) != 0) {\n           return this.atOccurrence = false\n        }\n      }\n      var result = this.matches(reverse, head)\n      this.afterEmptyMatch = result && CodeMirror.cmpPos(result.from, result.to) == 0\n\n      if (result) {\n        this.pos = result\n        this.atOccurrence = true\n        return this.pos.match || true\n      } else {\n        var end = Pos(reverse ? this.doc.firstLine() : this.doc.lastLine() + 1, 0)\n        this.pos = {from: end, to: end}\n        return this.atOccurrence = false\n      }\n    },\n\n    from: function() {if (this.atOccurrence) return this.pos.from},\n    to: function() {if (this.atOccurrence) return this.pos.to},\n\n    replace: function(newText, origin) {\n      if (!this.atOccurrence) return\n      var lines = CodeMirror.splitLines(newText)\n      this.doc.replaceRange(lines, this.pos.from, this.pos.to, origin)\n      this.pos.to = Pos(this.pos.from.line + lines.length - 1,\n                        lines[lines.length - 1].length + (lines.length == 1 ? this.pos.from.ch : 0))\n    }\n  }\n\n  CodeMirror.defineExtension(\"getSearchCursor\", function(query, pos, caseFold) {\n    return new SearchCursor(this.doc, query, pos, caseFold)\n  })\n  CodeMirror.defineDocExtension(\"getSearchCursor\", function(query, pos, caseFold) {\n    return new SearchCursor(this, query, pos, caseFold)\n  })\n\n  CodeMirror.defineExtension(\"selectMatches\", function(query, caseFold) {\n    var ranges = []\n    var cur = this.getSearchCursor(query, this.getCursor(\"from\"), caseFold)\n    while (cur.findNext()) {\n      if (CodeMirror.cmpPos(cur.to(), this.getCursor(\"to\")) > 0) break\n      ranges.push({anchor: cur.from(), head: cur.to()})\n    }\n    if (ranges.length)\n      this.setSelections(ranges, 0)\n  })\n});\n"],"names":["m","P","k","s","Pos","B","e","t","flags","ignoreCase","global","multiline","F","n","r","l","length","indexOf","charAt","RegExp","source","R","test","I","line","ch","i","lastLine","lastIndex","h","getLine","f","exec","from","index","to","match","j","p","u","a","slice","split","c","g","v","z","D","firstLine","A","x","L","Math","max","y","O","S","C","lastIndexOf","w","this","atOccurrence","afterEmptyMatch","doc","clipPos","pos","caseFold","matches","o","String","prototype","normalize","toLowerCase","findNext","find","findPrevious","cmpPos","replace","splitLines","replaceRange","defineExtension","defineDocExtension","getSearchCursor","getCursor","push","anchor","head","setSelections","G","N","exports"],"sourceRoot":""}