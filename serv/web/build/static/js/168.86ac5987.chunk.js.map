{"version":3,"file":"static/js/168.86ac5987.chunk.js","mappings":"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","sources":["../node_modules/@graphiql/codemirror-graphql/esm/utils/forEachState.js","../node_modules/@graphiql/codemirror-graphql/esm/utils/hintList.js","../node_modules/@graphiql/codemirror-graphql/esm/variables/hint.js"],"sourcesContent":["export default function forEachState(stack, fn) {\n    const reverseStateStack = [];\n    let state = stack;\n    while (state === null || state === void 0 ? void 0 : state.kind) {\n        reverseStateStack.push(state);\n        state = state.prevState;\n    }\n    for (let i = reverseStateStack.length - 1; i >= 0; i--) {\n        fn(reverseStateStack[i]);\n    }\n}\n//# sourceMappingURL=forEachState.js.map","export default function hintList(cursor, token, list) {\n    const hints = filterAndSortList(list, normalizeText(token.string));\n    if (!hints) {\n        return;\n    }\n    const tokenStart = token.type !== null && /\"|\\w/.test(token.string[0])\n        ? token.start\n        : token.end;\n    return {\n        list: hints,\n        from: { line: cursor.line, ch: tokenStart },\n        to: { line: cursor.line, ch: token.end },\n    };\n}\nfunction filterAndSortList(list, text) {\n    if (!text) {\n        return filterNonEmpty(list, entry => !entry.isDeprecated);\n    }\n    const byProximity = list.map(entry => ({\n        proximity: getProximity(normalizeText(entry.text), text),\n        entry,\n    }));\n    const conciseMatches = filterNonEmpty(filterNonEmpty(byProximity, pair => pair.proximity <= 2), pair => !pair.entry.isDeprecated);\n    const sortedMatches = conciseMatches.sort((a, b) => (a.entry.isDeprecated ? 1 : 0) - (b.entry.isDeprecated ? 1 : 0) ||\n        a.proximity - b.proximity ||\n        a.entry.text.length - b.entry.text.length);\n    return sortedMatches.map(pair => pair.entry);\n}\nfunction filterNonEmpty(array, predicate) {\n    const filtered = array.filter(predicate);\n    return filtered.length === 0 ? array : filtered;\n}\nfunction normalizeText(text) {\n    return text.toLowerCase().replaceAll(/\\W/g, '');\n}\nfunction getProximity(suggestion, text) {\n    let proximity = lexicalDistance(text, suggestion);\n    if (suggestion.length > text.length) {\n        proximity -= suggestion.length - text.length - 1;\n        proximity += suggestion.indexOf(text) === 0 ? 0 : 0.5;\n    }\n    return proximity;\n}\nfunction lexicalDistance(a, b) {\n    let i;\n    let j;\n    const d = [];\n    const aLength = a.length;\n    const bLength = b.length;\n    for (i = 0; i <= aLength; i++) {\n        d[i] = [i];\n    }\n    for (j = 1; j <= bLength; j++) {\n        d[0][j] = j;\n    }\n    for (i = 1; i <= aLength; i++) {\n        for (j = 1; j <= bLength; j++) {\n            const cost = a[i - 1] === b[j - 1] ? 0 : 1;\n            d[i][j] = Math.min(d[i - 1][j] + 1, d[i][j - 1] + 1, d[i - 1][j - 1] + cost);\n            if (i > 1 && j > 1 && a[i - 1] === b[j - 2] && a[i - 2] === b[j - 1]) {\n                d[i][j] = Math.min(d[i][j], d[i - 2][j - 2] + cost);\n            }\n        }\n    }\n    return d[aLength][bLength];\n}\n//# sourceMappingURL=hintList.js.map","import CodeMirror from 'codemirror';\nimport { getNullableType, getNamedType, GraphQLEnumType, GraphQLInputObjectType, GraphQLList, GraphQLBoolean, } from 'graphql';\nimport forEachState from '../utils/forEachState';\nimport hintList from '../utils/hintList';\nCodeMirror.registerHelper('hint', 'graphql-variables', (editor, options) => {\n    const cur = editor.getCursor();\n    const token = editor.getTokenAt(cur);\n    const results = getVariablesHint(cur, token, options);\n    if ((results === null || results === void 0 ? void 0 : results.list) && results.list.length > 0) {\n        results.from = CodeMirror.Pos(results.from.line, results.from.ch);\n        results.to = CodeMirror.Pos(results.to.line, results.to.ch);\n        CodeMirror.signal(editor, 'hasCompletion', editor, results, token);\n    }\n    return results;\n});\nfunction getVariablesHint(cur, token, options) {\n    const state = token.state.kind === 'Invalid' ? token.state.prevState : token.state;\n    const { kind, step } = state;\n    if (kind === 'Document' && step === 0) {\n        return hintList(cur, token, [{ text: '{' }]);\n    }\n    const { variableToType } = options;\n    if (!variableToType) {\n        return;\n    }\n    const typeInfo = getTypeInfo(variableToType, token.state);\n    if (kind === 'Document' || (kind === 'Variable' && step === 0)) {\n        const variableNames = Object.keys(variableToType);\n        return hintList(cur, token, variableNames.map(name => ({\n            text: `\"${name}\": `,\n            type: variableToType[name],\n        })));\n    }\n    if ((kind === 'ObjectValue' || (kind === 'ObjectField' && step === 0)) &&\n        typeInfo.fields) {\n        const inputFields = Object.keys(typeInfo.fields).map(fieldName => typeInfo.fields[fieldName]);\n        return hintList(cur, token, inputFields.map(field => ({\n            text: `\"${field.name}\": `,\n            type: field.type,\n            description: field.description,\n        })));\n    }\n    if (kind === 'StringValue' ||\n        kind === 'NumberValue' ||\n        kind === 'BooleanValue' ||\n        kind === 'NullValue' ||\n        (kind === 'ListValue' && step === 1) ||\n        (kind === 'ObjectField' && step === 2) ||\n        (kind === 'Variable' && step === 2)) {\n        const namedInputType = typeInfo.type\n            ? getNamedType(typeInfo.type)\n            : undefined;\n        if (namedInputType instanceof GraphQLInputObjectType) {\n            return hintList(cur, token, [{ text: '{' }]);\n        }\n        if (namedInputType instanceof GraphQLEnumType) {\n            const values = namedInputType.getValues();\n            return hintList(cur, token, values.map(value => ({\n                text: `\"${value.name}\"`,\n                type: namedInputType,\n                description: value.description,\n            })));\n        }\n        if (namedInputType === GraphQLBoolean) {\n            return hintList(cur, token, [\n                { text: 'true', type: GraphQLBoolean, description: 'Not false.' },\n                { text: 'false', type: GraphQLBoolean, description: 'Not true.' },\n            ]);\n        }\n    }\n}\nfunction getTypeInfo(variableToType, tokenState) {\n    const info = {\n        type: null,\n        fields: null,\n    };\n    forEachState(tokenState, state => {\n        switch (state.kind) {\n            case 'Variable': {\n                info.type = variableToType[state.name];\n                break;\n            }\n            case 'ListValue': {\n                const nullableType = info.type ? getNullableType(info.type) : undefined;\n                info.type =\n                    nullableType instanceof GraphQLList ? nullableType.ofType : null;\n                break;\n            }\n            case 'ObjectValue': {\n                const objectType = info.type ? getNamedType(info.type) : undefined;\n                info.fields =\n                    objectType instanceof GraphQLInputObjectType\n                        ? objectType.getFields()\n                        : null;\n                break;\n            }\n            case 'ObjectField': {\n                const objectField = state.name && info.fields ? info.fields[state.name] : null;\n                info.type = objectField === null || objectField === void 0 ? void 0 : objectField.type;\n                break;\n            }\n        }\n    });\n    return info;\n}\n//# sourceMappingURL=hint.js.map"],"names":["s","e","a","o","t","kind","push","prevState","i","length","f","n","r","v","b","string","type","test","start","end","list","from","line","ch","to","d","l","isDeprecated","map","proximity","O","text","entry","sort","filter","toLowerCase","replaceAll","N","indexOf","p","Math","min","D","state","step","variableToType","M","Object","keys","concat","fields","name","description","h","g","T","getValues","m","y","j","V","L","ofType","getFields","c","u","registerHelper","getCursor","getTokenAt","Pos","signal"],"sourceRoot":""}