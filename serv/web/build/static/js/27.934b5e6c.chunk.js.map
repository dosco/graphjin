{"version":3,"file":"static/js/27.934b5e6c.chunk.js","mappings":"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","sources":["../node_modules/@graphiql/codemirror-graphql/esm/utils/jsonParse.js","../node_modules/@graphiql/codemirror-graphql/esm/variables/lint.js"],"sourcesContent":["export default function jsonParse(str) {\n    string = str;\n    strLen = str.length;\n    start = end = lastEnd = -1;\n    ch();\n    lex();\n    const ast = parseObj();\n    expect('EOF');\n    return ast;\n}\nlet string;\nlet strLen;\nlet start;\nlet end;\nlet lastEnd;\nlet code;\nlet kind;\nfunction parseObj() {\n    const nodeStart = start;\n    const members = [];\n    expect('{');\n    if (!skip('}')) {\n        do {\n            members.push(parseMember());\n        } while (skip(','));\n        expect('}');\n    }\n    return {\n        kind: 'Object',\n        start: nodeStart,\n        end: lastEnd,\n        members,\n    };\n}\nfunction parseMember() {\n    const nodeStart = start;\n    const key = kind === 'String' ? curToken() : null;\n    expect('String');\n    expect(':');\n    const value = parseVal();\n    return {\n        kind: 'Member',\n        start: nodeStart,\n        end: lastEnd,\n        key,\n        value,\n    };\n}\nfunction parseArr() {\n    const nodeStart = start;\n    const values = [];\n    expect('[');\n    if (!skip(']')) {\n        do {\n            values.push(parseVal());\n        } while (skip(','));\n        expect(']');\n    }\n    return {\n        kind: 'Array',\n        start: nodeStart,\n        end: lastEnd,\n        values,\n    };\n}\nfunction parseVal() {\n    switch (kind) {\n        case '[':\n            return parseArr();\n        case '{':\n            return parseObj();\n        case 'String':\n        case 'Number':\n        case 'Boolean':\n        case 'Null':\n            const token = curToken();\n            lex();\n            return token;\n    }\n    expect('Value');\n}\nfunction curToken() {\n    return { kind, start, end, value: JSON.parse(string.slice(start, end)) };\n}\nfunction expect(str) {\n    if (kind === str) {\n        lex();\n        return;\n    }\n    let found;\n    if (kind === 'EOF') {\n        found = '[end of file]';\n    }\n    else if (end - start > 1) {\n        found = '`' + string.slice(start, end) + '`';\n    }\n    else {\n        const match = string.slice(start).match(/^.+?\\b/);\n        found = '`' + (match ? match[0] : string[start]) + '`';\n    }\n    throw syntaxError(`Expected ${str} but found ${found}.`);\n}\nexport class JSONSyntaxError extends Error {\n    constructor(message, position) {\n        super(message);\n        this.position = position;\n    }\n}\nfunction syntaxError(message) {\n    return new JSONSyntaxError(message, { start, end });\n}\nfunction skip(k) {\n    if (kind === k) {\n        lex();\n        return true;\n    }\n}\nfunction ch() {\n    if (end < strLen) {\n        end++;\n        code = end === strLen ? 0 : string.charCodeAt(end);\n    }\n    return code;\n}\nfunction lex() {\n    lastEnd = end;\n    while (code === 9 || code === 10 || code === 13 || code === 32) {\n        ch();\n    }\n    if (code === 0) {\n        kind = 'EOF';\n        return;\n    }\n    start = end;\n    switch (code) {\n        case 34:\n            kind = 'String';\n            return readString();\n        case 45:\n        case 48:\n        case 49:\n        case 50:\n        case 51:\n        case 52:\n        case 53:\n        case 54:\n        case 55:\n        case 56:\n        case 57:\n            kind = 'Number';\n            return readNumber();\n        case 102:\n            if (string.slice(start, start + 5) !== 'false') {\n                break;\n            }\n            end += 4;\n            ch();\n            kind = 'Boolean';\n            return;\n        case 110:\n            if (string.slice(start, start + 4) !== 'null') {\n                break;\n            }\n            end += 3;\n            ch();\n            kind = 'Null';\n            return;\n        case 116:\n            if (string.slice(start, start + 4) !== 'true') {\n                break;\n            }\n            end += 3;\n            ch();\n            kind = 'Boolean';\n            return;\n    }\n    kind = string[start];\n    ch();\n}\nfunction readString() {\n    ch();\n    while (code !== 34 && code > 31) {\n        if (code === 92) {\n            code = ch();\n            switch (code) {\n                case 34:\n                case 47:\n                case 92:\n                case 98:\n                case 102:\n                case 110:\n                case 114:\n                case 116:\n                    ch();\n                    break;\n                case 117:\n                    ch();\n                    readHex();\n                    readHex();\n                    readHex();\n                    readHex();\n                    break;\n                default:\n                    throw syntaxError('Bad character escape sequence.');\n            }\n        }\n        else if (end === strLen) {\n            throw syntaxError('Unterminated string.');\n        }\n        else {\n            ch();\n        }\n    }\n    if (code === 34) {\n        ch();\n        return;\n    }\n    throw syntaxError('Unterminated string.');\n}\nfunction readHex() {\n    if ((code >= 48 && code <= 57) ||\n        (code >= 65 && code <= 70) ||\n        (code >= 97 && code <= 102)) {\n        return ch();\n    }\n    throw syntaxError('Expected hexadecimal digit.');\n}\nfunction readNumber() {\n    if (code === 45) {\n        ch();\n    }\n    if (code === 48) {\n        ch();\n    }\n    else {\n        readDigits();\n    }\n    if (code === 46) {\n        ch();\n        readDigits();\n    }\n    if (code === 69 || code === 101) {\n        code = ch();\n        if (code === 43 || code === 45) {\n            ch();\n        }\n        readDigits();\n    }\n}\nfunction readDigits() {\n    if (code < 48 || code > 57) {\n        throw syntaxError('Expected decimal digit.');\n    }\n    do {\n        ch();\n    } while (code >= 48 && code <= 57);\n}\n//# sourceMappingURL=jsonParse.js.map","import CodeMirror from 'codemirror';\nimport { GraphQLEnumType, GraphQLInputObjectType, GraphQLList, GraphQLNonNull, GraphQLScalarType, } from 'graphql';\nimport jsonParse, { JSONSyntaxError, } from '../utils/jsonParse';\nCodeMirror.registerHelper('lint', 'graphql-variables', (text, options, editor) => {\n    if (!text) {\n        return [];\n    }\n    let ast;\n    try {\n        ast = jsonParse(text);\n    }\n    catch (error) {\n        if (error instanceof JSONSyntaxError) {\n            return [lintError(editor, error.position, error.message)];\n        }\n        throw error;\n    }\n    const { variableToType } = options;\n    if (!variableToType) {\n        return [];\n    }\n    return validateVariables(editor, variableToType, ast);\n});\nfunction validateVariables(editor, variableToType, variablesAST) {\n    var _a;\n    const errors = [];\n    for (const member of variablesAST.members) {\n        if (member) {\n            const variableName = (_a = member.key) === null || _a === void 0 ? void 0 : _a.value;\n            const type = variableToType[variableName];\n            if (type) {\n                for (const [node, message] of validateValue(type, member.value)) {\n                    errors.push(lintError(editor, node, message));\n                }\n            }\n            else {\n                errors.push(lintError(editor, member.key, `Variable \"$${variableName}\" does not appear in any GraphQL query.`));\n            }\n        }\n    }\n    return errors;\n}\nfunction validateValue(type, valueAST) {\n    if (!type || !valueAST) {\n        return [];\n    }\n    if (type instanceof GraphQLNonNull) {\n        if (valueAST.kind === 'Null') {\n            return [[valueAST, `Type \"${type}\" is non-nullable and cannot be null.`]];\n        }\n        return validateValue(type.ofType, valueAST);\n    }\n    if (valueAST.kind === 'Null') {\n        return [];\n    }\n    if (type instanceof GraphQLList) {\n        const itemType = type.ofType;\n        if (valueAST.kind === 'Array') {\n            const values = valueAST.values || [];\n            return mapCat(values, item => validateValue(itemType, item));\n        }\n        return validateValue(itemType, valueAST);\n    }\n    if (type instanceof GraphQLInputObjectType) {\n        if (valueAST.kind !== 'Object') {\n            return [[valueAST, `Type \"${type}\" must be an Object.`]];\n        }\n        const providedFields = Object.create(null);\n        const fieldErrors = mapCat(valueAST.members, member => {\n            var _a;\n            const fieldName = (_a = member === null || member === void 0 ? void 0 : member.key) === null || _a === void 0 ? void 0 : _a.value;\n            providedFields[fieldName] = true;\n            const inputField = type.getFields()[fieldName];\n            if (!inputField) {\n                return [\n                    [\n                        member.key,\n                        `Type \"${type}\" does not have a field \"${fieldName}\".`,\n                    ],\n                ];\n            }\n            const fieldType = inputField ? inputField.type : undefined;\n            return validateValue(fieldType, member.value);\n        });\n        for (const fieldName of Object.keys(type.getFields())) {\n            const field = type.getFields()[fieldName];\n            if (!providedFields[fieldName] &&\n                field.type instanceof GraphQLNonNull &&\n                !field.defaultValue) {\n                fieldErrors.push([\n                    valueAST,\n                    `Object of type \"${type}\" is missing required field \"${fieldName}\".`,\n                ]);\n            }\n        }\n        return fieldErrors;\n    }\n    if ((type.name === 'Boolean' && valueAST.kind !== 'Boolean') ||\n        (type.name === 'String' && valueAST.kind !== 'String') ||\n        (type.name === 'ID' &&\n            valueAST.kind !== 'Number' &&\n            valueAST.kind !== 'String') ||\n        (type.name === 'Float' && valueAST.kind !== 'Number') ||\n        (type.name === 'Int' &&\n            (valueAST.kind !== 'Number' || (valueAST.value | 0) !== valueAST.value))) {\n        return [[valueAST, `Expected value of type \"${type}\".`]];\n    }\n    if ((type instanceof GraphQLEnumType || type instanceof GraphQLScalarType) &&\n        ((valueAST.kind !== 'String' &&\n            valueAST.kind !== 'Number' &&\n            valueAST.kind !== 'Boolean' &&\n            valueAST.kind !== 'Null') ||\n            isNullish(type.parseValue(valueAST.value)))) {\n        return [[valueAST, `Expected value of type \"${type}\".`]];\n    }\n    return [];\n}\nfunction lintError(editor, node, message) {\n    return {\n        message,\n        severity: 'error',\n        type: 'validation',\n        from: editor.posFromIndex(node.start),\n        to: editor.posFromIndex(node.end),\n    };\n}\nfunction isNullish(value) {\n    return value === null || value === undefined || value !== value;\n}\nfunction mapCat(array, mapper) {\n    return Array.prototype.concat.apply([], array.map(mapper));\n}\n//# sourceMappingURL=lint.js.map"],"names":["H","e","d","w","length","s","u","g","o","x","n","B","p","r","f","E","push","U","kind","start","end","members","G","i","V","key","value","_","values","JSON","parse","slice","match","b","concat","t","F","Error","constructor","super","this","position","charCodeAt","J","P","N","O","z","l","a","c","m","h","y","Q","k","$","j","ofType","C","L","M","Object","create","getFields","type","keys","defaultValue","name","v","D","K","parseValue","message","severity","from","posFromIndex","to","Array","prototype","apply","map","q","registerHelper","variableToType"],"sourceRoot":""}