{"version":3,"file":"static/js/142.452d36a8.chunk.js","mappings":"kPAUG,SAASA,GACV,IAAIC,EAAS,UAAUC,KAAKC,UAAUC,aACV,MAAzBC,SAASC,cAAwBD,SAASC,aAAe,GAExDC,EAAMP,EAAWQ,IAEjBC,EAAW,CAAC,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,KAAM,IAAK,MAElG,SAASC,EAAaC,GACpB,OAAOA,GAAUA,EAAOC,cAAgB,WACzC,CAED,SAASC,EAAoBF,EAAIG,EAAOC,GACtC,IAAIC,EAAOL,EAAGM,cAAcH,EAAMI,MAAOC,EAAML,EAAMM,GAAK,EACtDC,EAAcN,GAAUA,EAAOO,YAChB,MAAfD,IACFA,EAAc,0BAA0BnB,KAAKS,EAAGY,oBAAoBC,YACtE,IAAIC,EAAKf,EAAaK,GAMlBW,GAAUL,GAAeF,GAAO,GAAKM,EAAGvB,KAAKc,EAAKW,KAAKC,OAAOT,KAASV,EAASO,EAAKW,KAAKC,OAAOT,KACjGM,EAAGvB,KAAKc,EAAKW,KAAKC,OAAOT,EAAM,KAAOV,EAASO,EAAKW,KAAKC,SAAST,IACtE,IAAKO,EAAO,OAAO,KACnB,IAAIG,EAAyB,KAAnBH,EAAME,OAAO,GAAY,GAAK,EACxC,GAAIb,GAAUA,EAAOe,QAAWD,EAAM,IAAOV,GAAOL,EAAMM,IAAK,OAAO,KACtE,IAAIW,EAAQpB,EAAGqB,eAAezB,EAAIO,EAAMI,KAAMC,EAAM,IAEhDc,EAAQC,EAAevB,EAAIJ,EAAIO,EAAMI,KAAMC,GAAOU,EAAM,EAAI,EAAI,IAAKA,EAAKE,EAAOhB,GACrF,OAAa,MAATkB,EAAsB,KACnB,CAACE,KAAM5B,EAAIO,EAAMI,KAAMC,GAAMiB,GAAIH,GAASA,EAAMI,IAC/CC,MAAOL,GAASA,EAAMb,IAAMM,EAAME,OAAO,GAAIW,QAASV,EAAM,EACrE,CASD,SAASK,EAAevB,EAAIG,EAAOC,EAAKC,EAAOG,GAQ7C,IAAK,IAPDE,EAAcF,GAAUA,EAAOqB,mBAAsB,IACrDf,EAAgBN,GAAUA,EAAOsB,cAAiB,IAElDf,EAAQ,GACRG,EAAKnB,EAAaS,GAClBY,EAAUhB,EAAM,EAAI2B,KAAKC,IAAI7B,EAAMI,KAAOO,EAAcd,EAAGiC,WAAa,GACpDF,KAAKG,IAAIlC,EAAGmC,YAAc,EAAGhC,EAAMI,KAAOO,GACzDQ,EAASnB,EAAMI,KAAMe,GAAUF,EAASE,GAAUlB,EAAK,CAC9D,IAAIgC,EAAOpC,EAAGqC,QAAQf,GACtB,GAAKc,EACL,KAAIE,EAAMlC,EAAM,EAAI,EAAIgC,EAAKG,OAAS,EAAGC,EAAMpC,EAAM,EAAIgC,EAAKG,QAAU,EACxE,KAAIH,EAAKG,OAAS7B,GAElB,IADIY,GAAUnB,EAAMI,OAAM+B,EAAMnC,EAAMM,IAAML,EAAM,EAAI,EAAI,IACnDkC,GAAOE,EAAKF,GAAOlC,EAAK,CAC7B,IAAIqC,EAAKL,EAAKnB,OAAOqB,GACrB,GAAIpB,EAAG3B,KAAKkD,UAAkB,IAAVpC,IACCL,EAAGqB,eAAezB,EAAI0B,EAAQgB,EAAM,KAAO,MAAQjC,GAAS,KAAM,CACrF,IAAIqC,EAAQ5C,EAAS2C,GACrB,GAAIC,GAA6B,KAAnBA,EAAMzB,OAAO,IAAeb,EAAM,EAAIW,EAAM4B,KAAKF,OAAE,KACvD1B,EAAMwB,OAAQ,MAAO,CAACb,IAAK9B,EAAI0B,EAAQgB,GAAM7B,GAAIgC,GACtD1B,EAAM6B,KADmD,CAAD,IAKnE,OAAOtB,EAASlB,IAAQA,EAAM,EAAIJ,EAAGiC,WAAajC,EAAGmC,cAAuB,IAC7E,CAED,SAASU,EAAc7C,EAAIG,EAAWC,GAKpC,IAAK,IAHDC,EAAkBL,EAAG8C,MAAMC,cAAcC,wBAA0B,IACrExC,EAAuBJ,GAAUA,EAAO6C,qBACtCvC,EAAQ,GAAII,EAASd,EAAGkD,iBACnBnC,EAAI,EAAGA,EAAID,EAAOyB,OAAQxB,IAAK,CACtC,IAAIG,EAAQJ,EAAOC,GAAGoC,SAAWjD,EAAoBF,EAAIc,EAAOC,GAAGqC,KAAMhD,GACzE,GAAIc,IAAUA,EAAMS,QAAkC,IAAzBnB,IAAmCR,EAAGqC,QAAQnB,EAAMM,KAAKjB,MAAMgC,QAAUlC,EAAiB,CACrH,IAAIe,EAAQF,EAAMS,MAAQ,6BAA+B,gCACzDjB,EAAMiC,KAAK3C,EAAGqD,SAASnC,EAAMM,KAAM5B,EAAIsB,EAAMM,KAAKjB,KAAMW,EAAMM,KAAKf,GAAK,GAAI,CAACI,UAAWO,KACpFF,EAAMO,IAAMzB,EAAGqC,QAAQnB,EAAMO,GAAGlB,MAAMgC,QAAUlC,GAClDK,EAAMiC,KAAK3C,EAAGqD,SAASnC,EAAMO,GAAI7B,EAAIsB,EAAMO,GAAGlB,KAAMW,EAAMO,GAAGhB,GAAK,GAAI,CAACI,UAAWO,IAAO,EAI/F,GAAIV,EAAM6B,OAAQ,CAGZjD,GAAUU,EAAG8C,MAAMQ,SAAStD,EAAGuD,QAEnC,IAAIjC,EAAQkC,GAAA,WACVxD,EAAGyD,WAAU,WACX,IAAK,IAAIrB,EAAI,EAAGA,EAAI1B,EAAM6B,OAAQH,IAAK1B,EAAM0B,GAAGsB,OAC1D,GACA,GAJkB,SAKZ,IAAIvD,EACC,OAAOmB,EADGqC,WAAWrC,EAAO,IACrB,CAEf,CAED,SAASsC,EAAgB5D,GACvBA,EAAGyD,WAAU,WACPzD,EAAG8C,MAAMC,cAAcc,uBACzB7D,EAAG8C,MAAMC,cAAcc,uBACvB7D,EAAG8C,MAAMC,cAAcc,qBAAuB,MAEhD7D,EAAG8C,MAAMC,cAAcc,qBAAuBhB,EAAc7C,GAAI,EAAOA,EAAG8C,MAAMC,cACtF,GACG,CAED,SAASe,EAAiB9D,GACpBA,EAAG8C,MAAMC,eAAiB/C,EAAG8C,MAAMC,cAAcc,uBACnD7D,EAAG8C,MAAMC,cAAcc,uBACvB7D,EAAG8C,MAAMC,cAAcc,qBAAuB,KAEjD,CA5GQL,EAAAzD,EAAA,gBAIAyD,EAAAtD,EAAA,uBA+BAsD,EAAAjC,EAAA,kBA4BAiC,EAAAX,EAAA,iBA8BAW,EAAAI,EAAA,mBAUAJ,EAAAM,EAAA,oBAOTzE,EAAW0E,aAAa,iBAAiB,GAAO,SAAS/D,EAAIG,EAAKC,GAC5DA,GAAOA,GAAOf,EAAW2E,OAC3BhE,EAAGiE,IAAI,iBAAkBL,GACzB5D,EAAGiE,IAAI,QAASL,GAChB5D,EAAGiE,IAAI,OAAQH,GACfA,EAAiB9D,IAEfG,IACFH,EAAG8C,MAAMC,cAA8B,iBAAP5C,EAAkBA,EAAM,CAAC,EACzDH,EAAGkE,GAAG,iBAAkBN,GACxB5D,EAAGkE,GAAG,QAASN,GACf5D,EAAGkE,GAAG,OAAQJ,GAEpB,IAEEzE,EAAW8E,gBAAgB,iBAAiB,WAAYtB,EAAcuB,MAAM,EAAM,IAClF/E,EAAW8E,gBAAgB,uBAAuB,SAASnE,EAAKG,EAAQC,GAEtE,OAAIA,GAA8B,kBAAVD,KACjBC,GAGHA,EAAUe,OAAShB,EACnBA,EAASC,GAHTD,EAASA,EAAS,CAACgB,QAAQ,GAAQ,MAMhCjB,EAAoBkE,KAAMpE,EAAKG,EAC1C,IACEd,EAAW8E,gBAAgB,kBAAkB,SAASnE,EAAKG,EAAKC,EAAOC,GACrE,OAAOkB,EAAe6C,KAAMpE,EAAKG,EAAKC,EAAOC,EACjD,GACA,CA1JIhB,EAAIgF,EAAAA,EAAAA,OA0JPC,EAAAC,O,gMCrJE,SAAS7B,GAEV,IAgHI8B,EAAQpD,EAhHRE,EAAMoB,EAAW7C,IAErB,SAASiE,EAAY1D,GACnB,IAAIJ,EAAQI,EAAOqE,MACnB,OAAO,OAAAzE,QAAA,IAAAA,EAAAA,GAAyBI,EAAOsE,WAAa,IAAM,KACrDtE,EAAOuE,OAAS,IAAM,KACtBvE,EAAOwE,UAAY,IAAM,GAC/B,CAED,SAASP,EAAYjE,EAAQJ,GAE3B,IAAK,IADDQ,EAAUsD,EAAY1D,GAASD,EAASK,EACnCE,EAAI,EAAGA,EAAIV,EAAMuC,OAAQ7B,KAA6C,GAApCP,EAAO0E,QAAQ7E,EAAMiB,OAAOP,MACrEP,GAAUH,EAAMiB,OAAOP,IACzB,OAAOF,GAAWL,EAASC,EAAS,IAAI0E,OAAO1E,EAAO2E,OAAQ5E,EAC/D,CAED,SAAS6E,EAAe5E,GACtB,MAAO,0BAA0Bb,KAAKa,EAAO2E,OAC9C,CAED,SAASE,EAAoB7E,EAAKJ,EAAQQ,GACxCR,EAASqE,EAAYrE,EAAQ,KAC7B,IAAK,IAAIG,EAAOK,EAAMD,KAAMG,EAAKF,EAAMC,GAAIJ,EAAOD,EAAI6B,WAAY9B,GAAQE,EAAMF,IAAQO,EAAK,EAAG,CAC9FV,EAAOkF,UAAYxE,EACnB,IAAII,EAASV,EAAIiC,QAAQlC,GAAOqD,EAAQxD,EAAOmF,KAAKrE,GACpD,GAAI0C,EACF,MAAO,CAAChC,KAAMF,EAAInB,EAAMqD,EAAM4B,OACtB3D,GAAIH,EAAInB,EAAMqD,EAAM4B,MAAQ5B,EAAM,GAAGjB,QACrCZ,MAAO6B,EAAK,CAEzB,CAED,SAAS6B,EAA6BjF,EAAKJ,EAAQQ,GACjD,IAAKwE,EAAehF,GAAS,OAAOiF,EAAoB7E,EAAKJ,EAAQQ,GAErER,EAASqE,EAAYrE,EAAQ,MAE7B,IAAK,IADDG,EAAQO,EAAQ,EACXL,EAAOG,EAAMD,KAAMO,EAAOV,EAAI6B,WAAY5B,GAAQS,GAAO,CAMhE,IAAK,IAAI0C,EAAI,EAAGA,EAAI9C,KACdL,EAAOS,GADc0C,IAAK,CAE9B,IAAI1D,EAAUM,EAAIiC,QAAQhC,KAC1BF,EAAmB,MAAVA,EAAiBL,EAAUK,EAAA,KAAgBL,CAAA,CAEtDY,GAAgB,EAChBV,EAAOkF,UAAY1E,EAAMC,GACzB,IAAIM,EAAQf,EAAOmF,KAAKhF,GACxB,GAAIY,EAAO,CACT,IAAIG,EAASf,EAAOmF,MAAM,EAAGvE,EAAMqE,OAAOG,MAAA,MAAanD,EAASrB,EAAM,GAAGwE,MAAA,MACrE3F,EAAYY,EAAMD,KAAOW,EAAOqB,OAAS,EAAGD,EAAUpB,EAAOA,EAAOqB,OAAS,GAAGA,OACpF,MAAO,CAACf,KAAMF,EAAI1B,EAAW0C,GACrBb,GAAIH,EAAI1B,EAAYwC,EAAOG,OAAS,EACX,GAAjBH,EAAOG,OAAcD,EAAUF,EAAO,GAAGG,OAASH,EAAOA,EAAOG,OAAS,GAAGA,QACpFZ,MAAOZ,EAAK,EAGzB,CAED,SAASyE,EAAYpF,EAAQJ,EAAQQ,GAEnC,QADIL,EAAOO,EAAO,EACXA,GAAQN,EAAOmC,QAAQ,CAC5BvC,EAAOkF,UAAYxE,EACnB,IAAIL,EAAWL,EAAOmF,KAAK/E,GAC3B,IAAKC,EAAU,MACf,IAAIS,EAAMT,EAAS+E,MAAQ/E,EAAS,GAAGkC,OACvC,GAAIzB,EAAMV,EAAOmC,OAAS/B,EAAW,QAChCL,GAASW,EAAMX,EAAMiF,MAAQjF,EAAM,GAAGoC,UACzCpC,EAAQE,GACVK,EAAOL,EAAS+E,MAAQ,EAE1B,OAAOjF,CACR,CAED,SAASsF,EAAqBrF,EAAKJ,EAAQQ,GACzCR,EAASqE,EAAYrE,EAAQ,KAC7B,IAAK,IAAIG,EAAOK,EAAMD,KAAMG,EAAKF,EAAMC,GAAIJ,EAAQD,EAAI+B,YAAahC,GAAQE,EAAOF,IAAQO,GAAM,EAAG,CAClG,IAAII,EAASV,EAAIiC,QAAQlC,GACrBqD,EAAQgC,EAAY1E,EAAQd,EAAQU,EAAK,EAAI,EAAII,EAAOyB,OAAS7B,GACrE,GAAI8C,EACF,MAAO,CAAChC,KAAMF,EAAInB,EAAMqD,EAAM4B,OACtB3D,GAAIH,EAAInB,EAAMqD,EAAM4B,MAAQ5B,EAAM,GAAGjB,QACrCZ,MAAO6B,EAAK,CAEzB,CAED,SAASzD,EAA8BK,EAAKJ,EAAQQ,GAClD,IAAKwE,EAAehF,GAAS,OAAOyF,EAAqBrF,EAAKJ,EAAQQ,GACtER,EAASqE,EAAYrE,EAAQ,MAE7B,IAAK,IADDG,EAAQO,EAAY,EAAGL,EAAYD,EAAIiC,QAAQ7B,EAAMD,MAAMgC,OAAS/B,EAAMC,GACrEK,EAAON,EAAMD,KAAMiD,EAAQpD,EAAI+B,YAAarB,GAAQ0C,GAAQ,CACnE,IAAK,IAAI1D,EAAI,EAAGA,EAAIY,GAAaI,GAAQ0C,EAAO1D,IAAK,CACnD,IAAIiB,EAAUX,EAAIiC,QAAQvB,KAC1BX,EAAmB,MAAVA,EAAiBY,EAAUA,EAAA,KAAiBZ,CAAA,CAEvDO,GAAa,EAEb,IAAIQ,EAAQsE,EAAYrF,EAAQH,EAAQK,GACxC,GAAIa,EAAO,CACT,IAAIkB,EAASjC,EAAOmF,MAAM,EAAGpE,EAAMkE,OAAOG,MAAA,MAAa3F,EAASsB,EAAM,GAAGqE,MAAA,MACrEjD,EAAYxB,EAAOsB,EAAOG,OAAQqB,EAAUxB,EAAOA,EAAOG,OAAS,GAAGA,OAC1E,MAAO,CAACf,KAAMF,EAAIgB,EAAWsB,GACrBnC,GAAIH,EAAIgB,EAAY1C,EAAO2C,OAAS,EACX,GAAjB3C,EAAO2C,OAAcqB,EAAUhE,EAAO,GAAG2C,OAAS3C,EAAOA,EAAO2C,OAAS,GAAGA,QACpFZ,MAAOT,EAAK,EAGzB,CAaD,SAASwE,EAAUtF,EAAMJ,EAAQQ,EAAKL,GACpC,GAAIC,EAAKmC,QAAUvC,EAAOuC,OAAQ,OAAO/B,EACzC,IAAK,IAAIE,EAAM,EAAGL,EAAMG,EAAMuB,KAAKG,IAAI,EAAG9B,EAAKmC,OAASvC,EAAOuC,UAAW,CACxE,GAAI7B,GAAOL,EAAK,OAAOK,EACvB,IAAII,EAAOJ,EAAML,GAAQ,EACrBmD,EAAMrD,EAASC,EAAKkF,MAAM,EAAGxE,IAAMyB,OACvC,GAAIiB,GAAOhD,EAAK,OAAOM,EACd0C,EAAMhD,EAAKH,EAAMS,EACrBJ,EAAMI,EAAM,EAEpB,CAED,SAAS6E,EAAoBvF,EAAKJ,EAAOQ,EAAOL,GAG9C,IAAKH,EAAMuC,OAAQ,OAAO,KAC1B,IAAI7B,EAAOP,EAAWqE,EAASpD,EAC3Bf,EAAQK,EAAKV,GAAOuF,MAAM,YAE9BvF,EAAQ,IAAK,IAAIc,EAAON,EAAMD,KAAMiD,EAAKhD,EAAMC,GAAIX,EAAOM,EAAI6B,WAAa,EAAI5B,EAAMkC,OAAQzB,GAAQhB,EAAMgB,IAAQ0C,EAAK,EAAG,CACzH,IAAIzC,EAAOX,EAAIiC,QAAQvB,GAAMwE,MAAM9B,GAAKtC,EAASR,EAAKK,GACtD,GAAoB,GAAhBV,EAAMkC,OAAa,CACrB,IAAIH,EAAQlB,EAAO2D,QAAQxE,EAAM,IACjC,IAAc,GAAV+B,EAAa,SAASpC,EAE1B,OADIQ,EAAQkF,EAAU3E,EAAMG,EAAQkB,EAAO1B,GAAQ8C,EAC5C,CAAChC,KAAMF,EAAIR,EAAM4E,EAAU3E,EAAMG,EAAQkB,EAAO1B,GAAQ8C,GACvD/B,GAAIH,EAAIR,EAAM4E,EAAU3E,EAAMG,EAAQkB,EAAQ/B,EAAM,GAAGkC,OAAQ7B,GAAQ8C,GAAG,CAElF,IAAI5D,EAAUsB,EAAOqB,OAASlC,EAAM,GAAGkC,OACvC,GAAIrB,EAAOoE,MAAM1F,IAAYS,EAAM,GAAnC,CACA,IAAK,IAAIiC,EAAI,EAAGA,EAAIjC,EAAMkC,OAAS,EAAGD,IACpC,GAAI5B,EAAKN,EAAIiC,QAAQvB,EAAOwB,KAAOjC,EAAMiC,GAAI,SAAStC,EACxD,IAAI4D,EAAMxD,EAAIiC,QAAQvB,EAAOT,EAAMkC,OAAS,GAAIqD,EAAYlF,EAAKkD,GAAMtE,EAAWe,EAAMA,EAAMkC,OAAS,GACvG,GAAIqD,EAAUN,MAAM,EAAGhG,EAASiD,SAAWjD,EAC3C,MAAO,CAACkC,KAAMF,EAAIR,EAAM4E,EAAU3E,EAAMG,EAAQtB,EAASc,GAAQ8C,GACzD/B,GAAIH,EAAIR,EAAOT,EAAMkC,OAAS,EAAGmD,EAAU9B,EAAKgC,EAAWtG,EAASiD,OAAQ7B,IANpC,CAM0C,CAG/F,CAED,SAASmF,EAAqBzF,EAAKJ,EAAOQ,EAAOL,GAC/C,IAAKH,EAAMuC,OAAQ,OAAO,KAC1B,IAAI7B,EAAOP,EAAWqE,EAASpD,EAC3Bf,EAAQK,EAAKV,GAAOuF,MAAM,YAE9BvF,EAAQ,IAAK,IAAIc,EAAON,EAAMD,KAAMiD,EAAKhD,EAAMC,GAAIX,EAAQM,EAAI+B,YAAc,EAAI9B,EAAMkC,OAAQzB,GAAQhB,EAAOgB,IAAQ0C,GAAM,EAAG,CAC7H,IAAIzC,EAAOX,EAAIiC,QAAQvB,GACnB0C,GAAM,IAAGzC,EAAOA,EAAKuE,MAAM,EAAG9B,IAClC,IAAItC,EAASR,EAAKK,GAClB,GAAoB,GAAhBV,EAAMkC,OAAa,CACrB,IAAIH,EAAQlB,EAAO4E,YAAYzF,EAAM,IACrC,IAAc,GAAV+B,EAAa,SAASpC,EAC1B,MAAO,CAACwB,KAAMF,EAAIR,EAAM4E,EAAU3E,EAAMG,EAAQkB,EAAO1B,IAC/Ce,GAAIH,EAAIR,EAAM4E,EAAU3E,EAAMG,EAAQkB,EAAQ/B,EAAM,GAAGkC,OAAQ7B,IAAM,CAE7E,IAAId,EAAWS,EAAMA,EAAMkC,OAAS,GACpC,GAAIrB,EAAOoE,MAAM,EAAG1F,EAAS2C,SAAW3C,EAAxC,CACK,IAAI0C,EAAI,EAAb,IAAgB9B,EAAQM,EAAOT,EAAMkC,OAAS,EAAGD,EAAIjC,EAAMkC,OAAS,EAAGD,IACrE,GAAI5B,EAAKN,EAAIiC,QAAQ7B,EAAQ8B,KAAOjC,EAAMiC,GAAI,SAAStC,EACzD,IAAI4D,EAAMxD,EAAIiC,QAAQvB,EAAO,EAAIT,EAAMkC,QAASqD,EAAYlF,EAAKkD,GACjE,GAAIgC,EAAUN,MAAMM,EAAUrD,OAASlC,EAAM,GAAGkC,SAAWlC,EAAM,GACjE,MAAO,CAACmB,KAAMF,EAAIR,EAAO,EAAIT,EAAMkC,OAAQmD,EAAU9B,EAAKgC,EAAWhC,EAAIrB,OAASlC,EAAM,GAAGkC,OAAQ7B,IAC3Fe,GAAIH,EAAIR,EAAM4E,EAAU3E,EAAMG,EAAQtB,EAAS2C,OAAQ7B,IANJ,CAMU,CAG1E,CAED,SAASqF,EAAa3F,EAAKJ,EAAOQ,EAAKL,GAOrC,IAAIO,EANJ0D,KAAK4B,cAAe,EACpB5B,KAAK6B,iBAAkB,EACvB7B,KAAK8B,IAAM9F,EACXI,EAAMA,EAAMJ,EAAI+F,QAAQ3F,GAAOc,EAAI,EAAG,GACtC8C,KAAK1C,IAAM,CAACF,KAAMhB,EAAKiB,GAAIjB,GAGL,iBAAXL,EACTO,EAAWP,EAAQiG,UAEnB1F,EAAWP,EACXA,EAAU,MAGQ,iBAATH,GACO,MAAZU,IAAkBA,GAAW,GACjC0D,KAAKiC,QAAU,SAAShG,EAASS,GAC/B,OAAQT,EAAUwF,EAAuBF,GAAqBvF,EAAKJ,EAAOc,EAAKJ,EAChF,IAEDV,EAAQqE,EAAYrE,EAAO,MACtBG,IAAiC,IAAtBA,EAAQyE,UAKtBR,KAAKiC,QAAU,SAAShG,EAASS,GAC/B,OAAQT,EAAUoF,EAAuBR,GAAqB7E,EAAKJ,EAAOc,EAC3E,EANDsD,KAAKiC,QAAU,SAAShG,EAASS,GAC/B,OAAQT,EAAUN,EAAgCsF,GAA8BjF,EAAKJ,EAAOc,EAC7F,EAMN,CA3NQzB,EAAAyE,EAAA,eAOAzE,EAAAgF,EAAA,eAOAhF,EAAA2F,EAAA,kBAIA3F,EAAA4F,EAAA,uBAYA5F,EAAAgG,EAAA,gCA8BAhG,EAAAmG,EAAA,eAeAnG,EAAAoG,EAAA,wBAYApG,EAAAU,EAAA,iCAwBLuG,OAAOC,UAAUC,WACnBhC,EAASnF,GAAA,SAASe,GAAO,OAAOA,EAAIoG,UAAU,OAAOC,aAAe,GAA3D,UACTrF,EAAS/B,GAAA,SAASe,GAAO,OAAOA,EAAIoG,UAAU,MAAQ,GAA7C,YAEThC,EAASnF,GAAA,SAASe,GAAO,OAAOA,EAAIqG,aAAe,GAA1C,UACTrF,EAAS/B,GAAA,SAASe,GAAO,OAAOA,CAAK,GAA5B,WAKFf,EAAAqG,EAAA,aAYArG,EAAAsG,EAAA,uBA4BAtG,EAAAwG,EAAA,wBA2BAxG,EAAA0G,EAAA,gBAiCTA,EAAaQ,UAAY,CACvBG,SAAU,WAAY,OAAOtC,KAAKuC,MAAK,EAAM,EAC7CC,aAAc,WAAY,OAAOxC,KAAKuC,MAAK,EAAK,EAEhDA,KAAM,SAASvG,GACb,IAAIJ,EAAOoE,KAAK8B,IAAIC,QAAQ/F,EAAUgE,KAAK1C,IAAIF,KAAO4C,KAAK1C,IAAID,IAC/D,GAAI2C,KAAK6B,iBAAmB7B,KAAK4B,eAE/BhG,EAAOsB,EAAItB,EAAKO,KAAMP,EAAKS,IACvBL,GACFJ,EAAKS,KACDT,EAAKS,GAAK,IACZT,EAAKO,OACLP,EAAKS,IAAM2D,KAAK8B,IAAI7D,QAAQrC,EAAKO,OAAS,IAAIgC,UAGhDvC,EAAKS,KACDT,EAAKS,IAAM2D,KAAK8B,IAAI7D,QAAQrC,EAAKO,OAAS,IAAIgC,SAChDvC,EAAKS,GAAK,EACVT,EAAKO,SAG8C,GAAnDmC,EAAWmE,OAAO7G,EAAMoE,KAAK8B,IAAIC,QAAQnG,KAC1C,OAAOoE,KAAK4B,cAAe,EAGhC,IAAIxF,EAAS4D,KAAKiC,QAAQjG,EAASJ,GAGnC,GAFAoE,KAAK6B,gBAAkBzF,GAAuD,GAA7CkC,EAAWmE,OAAOrG,EAAOgB,KAAMhB,EAAOiB,IAEnEjB,EACF,OAAA4D,KAAK1C,IAAMlB,EACX4D,KAAK4B,cAAe,EACb5B,KAAK1C,IAAIC,QAAS,EAEzB,IAAIxB,EAAMmB,EAAIlB,EAAUgE,KAAK8B,IAAI/D,YAAciC,KAAK8B,IAAIjE,WAAa,EAAG,GACxE,OAAAmC,KAAK1C,IAAM,CAACF,KAAMrB,EAAKsB,GAAItB,GACpBiE,KAAK4B,cAAe,CAE9B,EAEDxE,KAAM,WAAY,GAAI4C,KAAK4B,aAAc,OAAO5B,KAAK1C,IAAIF,IAAI,EAC7DC,GAAI,WAAY,GAAI2C,KAAK4B,aAAc,OAAO5B,KAAK1C,IAAID,EAAE,EAEzDqF,QAAS,SAAS1G,EAASJ,GACzB,GAAKoE,KAAK4B,aACV,KAAIxF,EAAQkC,EAAWqE,WAAW3G,GAClCgE,KAAK8B,IAAIc,aAAaxG,EAAO4D,KAAK1C,IAAIF,KAAM4C,KAAK1C,IAAID,GAAIzB,GACzDoE,KAAK1C,IAAID,GAAKH,EAAI8C,KAAK1C,IAAIF,KAAKjB,KAAOC,EAAM+B,OAAS,EACpC/B,EAAMA,EAAM+B,OAAS,GAAGA,QAA0B,GAAhB/B,EAAM+B,OAAc6B,KAAK1C,IAAIF,KAAKf,GAAK,GAAE,CAC9F,GAGHiC,EAAWyB,gBAAgB,mBAAmB,SAAS/D,EAAOJ,EAAKQ,GACjE,OAAO,IAAIuF,EAAa3B,KAAK8B,IAAK9F,EAAOJ,EAAKQ,EAClD,IACEkC,EAAWuE,mBAAmB,mBAAmB,SAAS7G,EAAOJ,EAAKQ,GACpE,OAAO,IAAIuF,EAAa3B,KAAMhE,EAAOJ,EAAKQ,EAC9C,IAEEkC,EAAWyB,gBAAgB,iBAAiB,SAAS/D,EAAOJ,GAG1D,QAFIQ,EAAS,GACTL,EAAMiE,KAAK8C,gBAAgB9G,EAAOgE,KAAK+C,UAAU,QAASnH,GACvDG,EAAIuG,cACLhE,EAAWmE,OAAO1G,EAAIsB,KAAM2C,KAAK+C,UAAU,OAAS,IACxD3G,EAAOmC,KAAK,CAACyE,OAAQjH,EAAIqB,OAAQ4B,KAAMjD,EAAIsB,OAEzCjB,EAAO+B,QACT6B,KAAKiD,cAAc7G,EAAQ,EACjC,GACA,CA3SIkC,EAAI4E,EAAAA,EAAAA,OA2SPC,EAAAhD,O,0hBCnSE,SAASzD,GAGV,IAAII,EAAOJ,EAAW0G,SAClBhE,EAAM1C,EAAWjB,IAGrB,SAASE,EAAeK,EAAKJ,EAAOQ,GAClC,GAAIA,EAAM,GAAiB,GAAZR,EAAMS,GAAS,OAAOL,EAAI+F,QAAQ3C,EAAIxD,EAAMO,KAAO,IAClE,IAAIJ,EAAOC,EAAIiC,QAAQrC,EAAMO,MAC7B,GAAIC,EAAM,GAAKR,EAAMS,IAAMN,EAAKoC,OAAQ,OAAOnC,EAAI+F,QAAQ3C,EAAIxD,EAAMO,KAAO,EAAG,IAE/E,IAAK,IADgBF,EAAjBK,EAAQ,QAAerB,EAAWW,EAAMS,GACnCa,EAAMjC,EAAU0B,EAAIP,EAAM,EAAI,EAAIL,EAAKoC,OAAQE,EAAI,EAAGnB,GAAOP,EAAGO,GAAOd,EAAKiC,IAAK,CACxF,IAAI3C,EAAOK,EAAKc,OAAOT,EAAM,EAAIc,EAAM,EAAIA,GACvCc,EAAc,KAARtC,GAAegB,EAAW2G,WAAW3H,GAAQ,IAAM,IAE7D,GADW,KAAPsC,GAActC,EAAK4H,eAAiB5H,IAAMsC,EAAM,KACvC,SAAT1B,EACS,KAAP0B,GAAc1B,EAAQ,KAAML,EAAO+B,GAClC/C,EAAWiC,EAAMd,OAAA,GACJ,MAATE,GACLL,GAAQ+B,EAAK,CAEf,GADY,KAAR/B,GAAsB,KAAP+B,GAAc5B,EAAM,GAAGc,IAC9B,KAARjB,GAAsB,KAAP+B,GAAc5B,EAAM,EACrC,IAAIc,GAAOjC,EAAW,EAAG,CAAEgB,EAAO,IAAK,SAClCiB,GAAA,CAEP,OAIN,OAAOkC,EAAIxD,EAAMO,KAAMe,EACxB,CAED,SAAS+C,EAAYjE,EAAIJ,GACvBI,EAAGuH,oBAAmB,SAASnH,GAC7B,OAAIJ,EAAGwH,QAAQC,OAASzH,EAAG8F,IAAI4B,QAAUtH,EAAM2C,QACtCpD,EAAeK,EAAG8F,IAAK1F,EAAM4C,KAAMpD,GAEnCA,EAAM,EAAIQ,EAAMgB,OAAShB,EAAMiB,IAC9C,GACG,CAmDD,SAAS6C,EAAWlE,EAAIJ,GACtB,GAAII,EAAG2H,aAAc,OAAOjH,EAAWkH,KACvC5H,EAAGqD,WAAU,WAEX,IAAK,IADDjD,EAAMJ,EAAG8C,iBAAiBX,OAAQpC,EAAe,GAAIO,GAAQ,EACxDL,EAAI,EAAGA,EAAIG,EAAKH,IAAK,CAC5B,IAAIhB,EAAOe,EAAG8C,iBAAiB7C,GAAG+C,KAClC,KAAI/D,EAAKkB,MAAQG,GACjB,KAAIY,EAAKkC,EAAInE,EAAKkB,MAAQP,EAAQ,EAAI,GAAI,GAC1CI,EAAG4G,aAAA,KAAmB1F,EAAI,KAAM,eAChClB,EAAG6H,WAAW3G,EAAGf,KAAM,MAAM,GAC7BJ,EAAawC,KAAK,CAACS,KAAM9B,EAAI8F,OAAQ9F,IACrCZ,EAAOrB,EAAKkB,KAAO,GAErBH,EAAGiH,cAAclH,EACvB,IACIC,EAAG8H,YAAY,aAChB,CAMD,SAASC,EAAO/H,EAAIJ,GAElB,QADIQ,EAAQR,EAAIS,GAAIN,EAAMK,EAAOE,EAAON,EAAGiC,QAAQrC,EAAIO,MAChDC,GAASM,EAAW2G,WAAW/G,EAAKO,OAAOT,EAAQ,OAAOA,EACjE,KAAOL,EAAMO,EAAK6B,QAAUzB,EAAW2G,WAAW/G,EAAKO,OAAOd,OAASA,EACvE,MAAO,CAACqB,KAAMgC,EAAIxD,EAAIO,KAAMC,GAAQiB,GAAI+B,EAAIxD,EAAIO,KAAMJ,GAAMiI,KAAM1H,EAAK4E,MAAM9E,EAAOL,GACrF,CAqCD,SAASwF,EAAqBvF,EAAIJ,GAEhC,IAAK,IADDQ,EAASJ,EAAG8C,iBAAkB/C,EAAY,GACrCO,EAAI,EAAGA,EAAIF,EAAO+B,OAAQ7B,IAAK,CACtC,IAAIL,EAAQG,EAAOE,GACfrB,EAAYe,EAAGiI,SACfhI,EAAM+G,OAAQpH,EAAK,OAAQK,EAAM+G,OAAOkB,YACxChH,EAAUlB,EAAGiI,SACbhI,EAAM+C,KAAMpD,EAAK,OAAQK,EAAM+C,KAAKkF,YACxCjJ,EAAUiJ,WAAwC,MAA3BjI,EAAM+G,OAAOkB,WAChCjI,EAAM+G,OAAOkB,WAAalI,EAAGmI,aAAalI,EAAM+G,OAAQ,OAAOoB,KACnElH,EAAQgH,WAAsC,MAAzBjI,EAAM+C,KAAKkF,WAC5BjI,EAAM+C,KAAKkF,WAAalI,EAAGmI,aAAalI,EAAM+C,KAAM,OAAOoF,KAC/D,IAAIzH,EAAW,CAACqG,OAAQ/H,EAAW+D,KAAM9B,GACzCnB,EAAUwC,KAAKtC,GACfF,EAAUwC,KAAK5B,EAAQ,CAEzBX,EAAGiH,cAAclH,EAClB,CAID,SAASoB,EAAgBnB,EAAQJ,EAAMQ,GACrC,IAAK,IAAIL,EAAI,EAAGA,EAAIC,EAAOmC,OAAQpC,IACjC,GAAiD,GAA7CW,EAAW+F,OAAOzG,EAAOD,GAAGqB,OAAQxB,IACK,GAAzCc,EAAW+F,OAAOzG,EAAOD,GAAGsB,KAAMjB,GAAU,OAAO,EACzD,OAAO,CACR,CA9KQ8B,EAAAvC,EAAA,kBA0BAuC,EAAA+B,EAAA,eASTnD,EAAKuH,cAAgB,SAASrI,GAAMiE,EAAYjE,GAAK,EAAC,EACtDc,EAAKwH,eAAiB,SAAStI,GAAMiE,EAAYjE,EAAI,EAAC,EAEtDc,EAAKyH,aAAe,SAASvI,GAC3B,IAAIJ,EAAOI,EAAGwI,gBACd,IAAKxI,EAAGyI,oBAAqB,CAC3B,IAAIrI,EAAoBJ,EAAG0I,aAAa9I,EAAK+I,IAAM/I,EAAKgJ,aAAc,SAClE5I,EAAG+G,YAAY5G,MAAQC,GACzBJ,EAAG8H,YAAY,WAAU,CAE7B9H,EAAG6I,SAAS,KAAMjJ,EAAK+I,IAAM3I,EAAG8I,oBACpC,EACEhI,EAAKiI,eAAiB,SAAS/I,GAC7B,IAAIJ,EAAOI,EAAGwI,gBACd,IAAKxI,EAAGyI,oBAAqB,CAC3B,IAAIrI,EAAiBJ,EAAG0I,aAAa9I,EAAK+I,IAAK,SAAS,EACpD3I,EAAG+G,YAAY5G,MAAQC,GACzBJ,EAAG8H,YAAY,aAAY,CAE/B9H,EAAG6I,SAAS,KAAMjJ,EAAK+I,IAAM3I,EAAG8I,oBACpC,EAEEhI,EAAKkI,qBAAuB,SAAShJ,GAEnC,IAAK,IADDJ,EAASI,EAAG8C,iBAAkB1C,EAAa,GACtCL,EAAI,EAAGA,EAAIH,EAAOuC,OAAQpC,IAEjC,IAAK,IADDO,EAAOV,EAAOG,GAAGqB,OAAQnB,EAAKL,EAAOG,GAAGsB,KACnCpC,EAAOqB,EAAKH,KAAMlB,GAAQgB,EAAGE,OAAQlB,EACtCgB,EAAGE,KAAOG,EAAKH,MAAQlB,GAAQgB,EAAGE,MAAiB,GAATF,EAAGI,IACjDD,EAAWmC,KAAK,CAACyE,OAAQ/H,GAAQqB,EAAKH,KAAOG,EAAO8C,EAAInE,EAAM,GAC7C+D,KAAM/D,GAAQgB,EAAGE,KAAOF,EAAKmD,EAAInE,KAExDe,EAAGiH,cAAc7G,EAAY,EACjC,EAEEU,EAAKmI,mBAAqB,SAASjJ,GACjC,IAAIJ,EAAQI,EAAG8C,iBAAiB,GAChC9C,EAAGkJ,aAAatJ,EAAMoH,OAAQpH,EAAMoD,KAAM,CAACmG,QAAQ,GACvD,EAEErI,EAAKsI,WAAa,SAASpJ,GAEzB,IAAK,IADDJ,EAASI,EAAG8C,iBAAkB1C,EAAW,GACpCL,EAAI,EAAGA,EAAIH,EAAOuC,OAAQpC,IAAK,CACtC,IAAIO,EAAQV,EAAOG,GACnBK,EAASmC,KAAK,CAACyE,OAAQ5D,EAAI9C,EAAMc,OAAOjB,KAAM,GAC/B6C,KAAMI,EAAI9C,EAAMe,KAAKlB,KAAO,EAAG,IAAG,CAEnDH,EAAGiH,cAAc7G,EACrB,EAEW8B,EAAAgC,EAAA,cAkBTpD,EAAKuI,gBAAkB,SAASrJ,GAAM,OAAOkE,EAAWlE,GAAI,EAAK,EAEjEc,EAAKwI,iBAAmB,SAAStJ,GAAM,OAAOkE,EAAWlE,GAAI,EAAI,EAExDkC,EAAA6F,EAAA,UAOTjH,EAAKyI,qBAAuB,SAASvJ,GACnC,IAAIJ,EAAOI,EAAG+G,UAAU,QAAS3G,EAAKJ,EAAG+G,UAAU,MAC/ChH,EAAWC,EAAG0C,MAAM8G,qBAAuBxJ,EAAG8F,IAAI2D,IACtD,GAAmC,GAA/B/I,EAAW+F,OAAO7G,EAAMQ,GAAU,CACpC,IAAIE,EAAOyH,EAAO/H,EAAIJ,GACtB,IAAKU,EAAK0H,KAAM,OAChBhI,EAAGkJ,aAAa5I,EAAKc,KAAMd,EAAKe,IAChCtB,GAAW,MACN,CACL,IAAIE,EAAOD,EAAG0J,SAAS9J,EAAMQ,GACzBnB,EAAQc,EAAW,IAAI2E,OAAO,MAAQzE,EAAO,OAASA,EACtDiB,EAAMlB,EAAG8G,gBAAgB7H,EAAOmB,GAChCO,EAAQO,EAAIoF,WAKhB,GAJK3F,IAEHA,GADAO,EAAMlB,EAAG8G,gBAAgB7H,EAAOmE,EAAIpD,EAAG+B,YAAa,KACxCuE,aAET3F,GAASQ,EAAgBnB,EAAG8C,iBAAkB5B,EAAIE,OAAQF,EAAIG,MAAO,OAC1ErB,EAAG2J,aAAazI,EAAIE,OAAQF,EAAIG,KAAI,CAElCtB,IACFC,EAAG0C,MAAM8G,oBAAsBxJ,EAAG8F,IAAI2D,IAC5C,EAEE3I,EAAK8I,4BAA8B,SAAS5J,GAC1C,IAAIJ,EAAaI,EAAG+G,UAAU,UAAW3G,EAAWJ,EAAG+G,UAAU,QACjEjG,EAAKyI,qBAAqBvJ,GACqB,GAA3CU,EAAW+F,OAAO7G,EAAYQ,IAChCJ,EAAG8F,IAAImB,cAAcjH,EAAG8F,IAAIhD,iBACvB+G,QAAO,SAAU9J,GAChB,OAAOA,EAAIiH,QAAUpH,GAAcG,EAAIiD,MAAQ5C,CAChD,IAER,EAEQ8B,EAAAqD,EAAA,wBAkBTzE,EAAKgJ,oBAAsB,SAAS9J,GAAMuF,EAAqBvF,GAAK,EAAC,EACrEc,EAAKiJ,oBAAsB,SAAS/J,GAAMuF,EAAqBvF,EAAI,EAAC,EAE3DkC,EAAAf,EAAA,mBAOT,IAAIiD,EAAS,SACb,SAAS4F,EAAsBhK,GAE7B,IAAK,IADDJ,EAASI,EAAG8C,iBAAkB1C,EAAY,GACrCL,EAAI,EAAGA,EAAIH,EAAOuC,OAAQpC,IAAK,CACtC,IAAIO,EAAQV,EAAOG,GAAIE,EAAMK,EAAM0C,KAAM/D,EAAUe,EAAGiK,eAAehK,GAAM,GAC3E,IAAKhB,EAAS,OAAO,EACrB,OAAS,CACP,IAAIiC,EAAUlB,EAAGiK,eAAehK,EAAK,GACrC,IAAKiB,EAAS,OAAO,EACrB,GAAIA,EAAQb,IAAM+D,EAAOvD,OAAOuD,EAAOK,QAAQxF,EAAQoB,IAAM,GAAI,CAC/D,IAAIM,EAAWyC,EAAInE,EAAQqC,IAAInB,KAAMlB,EAAQqC,IAAIjB,GAAK,GACtD,GAAiD,GAA7CK,EAAW+F,OAAO9F,EAAUL,EAAMc,SACY,GAA9CV,EAAW+F,OAAOvF,EAAQI,IAAKhB,EAAMe,MAGlC,CACLjB,EAAUmC,KAAK,CAACyE,OAAQrG,EAAUqC,KAAM9B,EAAQI,MAChD,MAHA,KADArC,EAAUe,EAAGiK,eAAehL,EAAQqC,KAAM,IAC5B,OAAO,CAGrB,CAGJrB,EAAMmD,EAAIlC,EAAQI,IAAInB,KAAMe,EAAQI,IAAIjB,GAAK,EAAC,EAGlD,OAAAL,EAAGiH,cAAc7G,IACV,CACR,CASD,SAASyE,EAAS7E,GAChB,OAAQA,EAAc,kBAAkBb,KAAKa,GAAQA,OAAO,EAA7C,IAChB,CA6GD,SAAS4E,EAAU5E,EAAIJ,EAAeQ,GACpC,GAAIJ,EAAG2H,aAAc,OAAOjH,EAAWkH,KAEvC,IAAK,IAD0C3H,EAA3CF,EAASC,EAAG8C,iBAAkBxC,EAAS,GAClCrB,EAAI,EAAGA,EAAIc,EAAOoC,OAAQlD,IAAK,CACtC,IAAIiC,EAAQnB,EAAOd,GACnB,IAAIiC,EAAM6B,QAEV,SADIpC,EAAOO,EAAME,OAAOjB,KAAMkC,EAAKnB,EAAMG,KAAKlB,KACvClB,EAAIc,EAAOoC,OAAS,GAAKpC,EAAOd,EAAI,GAAGmC,OAAOjB,MAAQkC,GAC3DA,EAAKtC,IAASd,GAAGoC,KAAKlB,KACnBJ,EAAOd,GAAGoC,KAAKhB,IAAIgC,IACxB/B,EAAOiC,KAAK5B,EAAM0B,EAAE,EAElB/B,EAAO6B,OAAQlC,GAAW,EACzBK,EAAOiC,KAAKvC,EAAG+B,YAAa/B,EAAG6B,YAEpC7B,EAAGqD,WAAU,WAEX,IAAK,IADD3D,EAAS,GACJsC,EAAI,EAAGA,EAAI1B,EAAO6B,OAAQH,GAAK,EAAG,CACzC,IAAIlC,EAAOQ,EAAO0B,GAAI2D,EAAKrF,EAAO0B,EAAI,GAClCxC,EAAQ4D,EAAItD,EAAM,GAAIZ,EAAMkE,EAAIuC,GAChCnC,EAAQxD,EAAG0J,SAASlK,EAAON,GAAK,GAChCU,EACF4D,EAAM0G,MAAK,SAASlJ,EAAGsE,GAAK,OAAOtE,EAAIsE,GAAKlF,EAAYY,GAAKsE,EAAI,EAAIlF,CAAY,IAEjFoD,EAAM0G,MAAK,SAASlJ,EAAGsE,GACrB,IAAI6E,EAAKnJ,EAAEsG,cAAe7E,EAAK6C,EAAEgC,cACjC,OAAI6C,GAAM1H,IAAMzB,EAAImJ,EAAI7E,EAAI7C,GACrBzB,EAAIsE,GAAKlF,EAAYY,GAAKsE,EAAI,EAAIlF,CACrD,IACQJ,EAAG4G,aAAapD,EAAOhE,EAAON,GAC1Be,GAAUP,EAAO6C,KAAK,CAACyE,OAAQxH,EAAOwD,KAAMI,EAAIuC,EAAK,EAAG,IAAG,CAE7D1F,GAAUD,EAAGiH,cAAcvH,EAAQ,EAC7C,GACG,CAsED,SAAS2F,EAAsBrF,EAAIJ,GACjCI,EAAGqD,WAAU,WAEX,IAAK,IADDjD,EAASJ,EAAG8C,iBAAkB/C,EAAU,GAAIO,EAAe,GACtDL,EAAI,EAAGA,EAAIG,EAAO+B,OAAQlC,KAC7BhB,EAAQmB,EAAOH,IACT8C,SAAWhD,EAAQwC,KAAKtC,GAAIK,EAAaiC,KAAK,KACnDjC,EAAaiC,KAAK3C,EAAII,EAAG0J,SAASzK,EAAMmC,OAAQnC,EAAMoC,QAGxD,IAA4BH,EAAjC,IADAlB,EAAGoK,kBAAkB9J,EAAc,SAAU,QACpCL,EAAIF,EAAQoC,OAAS,EAAOlC,GAAK,EAAGA,IAAK,CAChD,IAAIhB,EAAQmB,EAAOL,EAAQE,IAC3B,KAAIiB,GAAMR,EAAW+F,OAAOxH,EAAM+D,KAAM9B,GAAM,GAC9C,KAAIP,EAAOoH,EAAO/H,EAAIf,EAAM+D,MAC5B9B,EAAKP,EAAKS,KACVpB,EAAG4G,aAAahH,EAAIe,EAAKqH,MAAOrH,EAAKS,KAAMT,EAAKU,GAAE,EAE1D,GACG,CAiFD,SAAS8F,EAAUnH,GACjB,IAAIJ,EAAOI,EAAG+G,UAAU,QAAS3G,EAAKJ,EAAG+G,UAAU,MACnD,GAAmC,GAA/BrG,EAAW+F,OAAO7G,EAAMQ,GAAU,CACpC,IAAIL,EAAOgI,EAAO/H,EAAIJ,GACtB,IAAKG,EAAKiI,KAAM,OAChBpI,EAAOG,EAAKqB,KACZhB,EAAKL,EAAKsB,EAAA,CAEZ,MAAO,CAACD,KAAMxB,EAAMyB,GAAIjB,EAAIiK,MAAOrK,EAAG0J,SAAS9J,EAAMQ,GAAK4H,KAAMjI,EACjE,CAED,SAASyF,EAAYxF,EAAIJ,GACvB,IAAIQ,EAAS+G,EAAUnH,GACvB,GAAKI,EACL,KAAIL,EAAQK,EAAOiK,MACf/J,EAAMN,EAAG8G,gBAAgB/G,EAAOH,EAAUQ,EAAOiB,GAAKjB,EAAOgB,OAE7DxB,EAAUU,EAAIgG,WAAahG,EAAIkG,gBACjCxG,EAAGkJ,aAAa5I,EAAIc,OAAQd,EAAIe,OAEhCf,EAAMN,EAAG8G,gBAAgB/G,EAAOH,EAAUwD,EAAIpD,EAAG+B,YAAa,GACpB/B,EAAG+F,QAAQ3C,EAAIpD,EAAG6B,eACxDjC,EAAUU,EAAIgG,WAAahG,EAAIkG,gBACjCxG,EAAGkJ,aAAa5I,EAAIc,OAAQd,EAAIe,MACzBjB,EAAO4H,MACdhI,EAAGkJ,aAAa9I,EAAOgB,KAAMhB,EAAOiB,IAAE,CAE9C,CArXWa,EAAA8H,EAAA,yBA0BTlJ,EAAKwJ,YAAc,SAAStK,GAC1BgK,EAAsBhK,IAAOA,EAAG8H,YAAY,YAChD,EACEhH,EAAKyJ,sBAAwB,SAASvK,GACpC,IAAKgK,EAAsBhK,GAAK,OAAOU,EAAWkH,IACtD,EAEW1F,EAAA2C,EAAA,YAIT/D,EAAK0J,YAAc,SAASxK,GAC1BA,EAAGuH,oBAAmB,SAAS3H,GAC7B,IAAIQ,EAAOJ,EAAGiK,eAAerK,EAAMoD,KAAM,EAAG6B,EAAS7E,EAAGiB,eAAerB,EAAMoD,QAC7E,GAAI5C,GAAmD,GAA3CM,EAAW+F,OAAOrG,EAAKkB,IAAK1B,EAAMoD,MAAY,OAAO5C,EAAKkB,IACtE,IAAIvB,EAAOC,EAAGiK,eAAerK,EAAMoD,MAAO,EAAG6B,EAAS7E,EAAGiB,eAAemC,EAAIxD,EAAMoD,KAAK7C,KAAMP,EAAMoD,KAAK3C,GAAK,MAC7G,OAAON,GAAQqD,EAAIrD,EAAKuB,IAAInB,KAAMJ,EAAKuB,IAAIjB,GAAK,IAAMT,EAAMoD,IAClE,GACA,EAEElC,EAAK2J,WAAa,SAASzK,GACzB,GAAIA,EAAG2H,aAAc,OAAOjH,EAAWkH,KAEvC,IAAK,IADDhI,EAASI,EAAG8C,iBAAkB1C,EAAc,GAAIL,EAAKC,EAAG+B,YAAc,EAAGzB,EAAU,GAC9EL,EAAI,EAAGA,EAAIL,EAAOuC,OAAQlC,IAAK,CACtC,IAAIhB,EAAQW,EAAOK,GAAIiB,EAAOjC,EAAMmC,OAAOjB,KAAO,EAAGQ,EAAK1B,EAAMoC,KAAKlB,KACrEG,EAAQiC,KAAK,CAACyE,OAAQ5D,EAAInE,EAAM+H,OAAO7G,KAAO,EAAGlB,EAAM+H,OAAO3G,IAChD2C,KAAMI,EAAInE,EAAM+D,KAAK7C,KAAO,EAAGlB,EAAM+D,KAAK3C,MACnC,GAAjBpB,EAAMoC,KAAKhB,KAAYpB,EAAM8D,WAAWpC,EACxCO,EAAOnB,EAAIK,EAAYmC,KAAKrB,EAAMP,GAC7BP,EAAY+B,SAAQ/B,EAAYA,EAAY+B,OAAS,GAAKxB,GACnEZ,EAAKY,CAAA,CAEPX,EAAGqD,WAAU,WACX,IAAK,IAAIhB,EAAI,EAAGA,EAAIjC,EAAY+B,OAAQE,GAAK,EAAG,CAC9C,IAAI3C,EAAOU,EAAYiC,GAAIL,EAAK5B,EAAYiC,EAAI,GAC5CvC,EAAOE,EAAGiC,QAAQvC,GACtBM,EAAG4G,aAAa,GAAIxD,EAAI1D,EAAM,GAAI0D,EAAI1D,EAAO,EAAG,GAAI,aAChDsC,EAAKhC,EAAG6B,WACV7B,EAAG4G,aAAa,KAAO9G,EAAMsD,EAAIpD,EAAG6B,YAAa,KAAM,aAEvD7B,EAAG4G,aAAa9G,EAAA,KAAasD,EAAIpB,EAAI,GAAI,KAAM,YAAW,CAE9DhC,EAAGiH,cAAc3G,GACjBN,EAAG0K,gBACT,GACA,EAEE5J,EAAK6J,aAAe,SAAS3K,GAC3B,GAAIA,EAAG2H,aAAc,OAAOjH,EAAWkH,KAEvC,IAAK,IADDhI,EAASI,EAAG8C,iBAAkB1C,EAAc,GAAIL,EAAKC,EAAG6B,WAAa,EAChEvB,EAAIV,EAAOuC,OAAS,EAAG7B,GAAK,EAAGA,IAAK,CAC3C,IAAIL,EAAQL,EAAOU,GAAIrB,EAAOgB,EAAMoB,KAAKlB,KAAO,EAAGe,EAAKjB,EAAMmB,OAAOjB,KAChD,GAAjBF,EAAMoB,KAAKhB,KAAYJ,EAAM8C,SAAS9D,IACtCA,EAAOc,EAAIK,EAAYmC,KAAKtD,EAAMiC,GAC7Bd,EAAY+B,SAAQ/B,EAAYA,EAAY+B,OAAS,GAAKjB,GACnEnB,EAAKmB,CAAA,CAEPlB,EAAGqD,WAAU,WACX,IAAK,IAAI1C,EAAIP,EAAY+B,OAAS,EAAGxB,GAAK,EAAGA,GAAK,EAAG,CACnD,IAAI0B,EAAOjC,EAAYO,GAAIjB,EAAKU,EAAYO,EAAI,GAC5CqB,EAAOhC,EAAGiC,QAAQI,GAClBA,GAAQrC,EAAG6B,WACb7B,EAAG4G,aAAa,GAAIxD,EAAIf,EAAO,GAAIe,EAAIf,GAAO,aAE9CrC,EAAG4G,aAAa,GAAIxD,EAAIf,EAAM,GAAIe,EAAIf,EAAO,EAAG,GAAI,aACtDrC,EAAG4G,aAAa5E,EAAA,KAAaoB,EAAI1D,EAAI,GAAI,KAAM,YAAW,CAE5DM,EAAG0K,gBACT,GACA,EAEE5J,EAAK8J,sBAAwB,SAAS5K,GACpCA,EAAG6K,cAAc,CAAEC,QAAQ,GAC5B,EAEDhK,EAAKiK,UAAY,SAAS/K,GAExB,IAAK,IADDJ,EAASI,EAAG8C,iBAAkB1C,EAAS,GAClCL,EAAI,EAAGA,EAAIH,EAAOuC,OAAQpC,IAAK,CAGtC,QAFIO,EAAQV,EAAOG,GAAIE,EAAOK,EAAMc,OAChCnC,EAAQgB,EAAKE,KAAMe,EAAMZ,EAAMe,KAAKlB,KACjCJ,EAAIH,EAAOuC,OAAS,GAAKvC,EAAOG,EAAI,GAAGqB,OAAOjB,MAAQe,GAC3DA,EAAMtB,IAASG,GAAGsB,KAAKlB,KACzBC,EAAOmC,KAAK,CAACyI,MAAO/L,EAAOgM,IAAK/J,EAAK8F,QAAS1G,EAAMyC,SAAW9C,GAAK,CAEtED,EAAGqD,WAAU,WAEX,IAAK,IADD1C,EAAS,EAAG0B,EAAS,GAChB3C,EAAI,EAAGA,EAAIU,EAAO+B,OAAQzC,IAAK,CAGtC,IAAK,IADoEiG,EADrE3D,EAAM5B,EAAOV,GACbI,EAASkC,EAAIgF,QAAU5D,EAAIpB,EAAIgF,OAAO7G,KAAOQ,EAAQqB,EAAIgF,OAAO3G,IAC3Db,EAAOwC,EAAIgJ,MAAOxL,GAAQwC,EAAIiJ,IAAKzL,IAAQ,CAClD,IAAIN,EAASM,EAAOmB,EAChBnB,GAAQwC,EAAIiJ,MAAKtF,EAAOvC,EAAIlE,EAAQc,EAAGiC,QAAQ/C,GAAQiD,OAAS,IAChEjD,EAASc,EAAG6B,aACd7B,EAAG4G,aAAa,IAAKxD,EAAIlE,GAASkE,EAAIlE,EAAS,EAAG,OAAO6F,KAAK/E,EAAGiC,QAAQ/C,EAAS,IAAI,GAAGiD,WACvFxB,EAAA,CAGN0B,EAAOE,KAAK,CAACyE,OAAQlH,GAAU6F,EAAM3C,KAAM2C,GAAK,CAElD3F,EAAGiH,cAAc5E,EAAQ,EAC/B,GACA,EAEEvB,EAAKoK,cAAgB,SAASlL,GAC5BA,EAAGqD,WAAU,WAEX,IAAK,IADDzD,EAAaI,EAAG8C,iBAAiBX,OAC5B/B,EAAI,EAAGA,EAAIR,EAAYQ,IAAK,CACnC,IAAIL,EAAQC,EAAG8C,iBAAiB1C,GAC5BL,EAAMgD,QACR/C,EAAG4G,aAAa5G,EAAGiC,QAAQlC,EAAMiD,KAAK7C,MAAQ,KAAMiD,EAAIrD,EAAMiD,KAAK7C,KAAM,IAEzEH,EAAG4G,aAAa5G,EAAG0J,SAAS3J,EAAMqB,OAAQrB,EAAMsB,MAAOtB,EAAMqB,OAAM,CAEvEpB,EAAG0K,gBACT,GACA,EAGWxI,EAAA0C,EAAA,aAoCT9D,EAAKqK,UAAY,SAASnL,GAAM4E,EAAU5E,GAAI,EAAM,EAAC,EACrDc,EAAKsK,iBAAmB,SAASpL,GAAM4E,EAAU5E,GAAI,GAAO,EAAC,EAC7Dc,EAAKuK,qBAAuB,SAASrL,GAAM4E,EAAU5E,GAAI,EAAO,EAAC,EACjEc,EAAKwK,4BAA8B,SAAStL,GAAM4E,EAAU5E,GAAI,GAAQ,EAAC,EAEzEc,EAAKyK,aAAe,SAASvL,GAC3B,IAAIJ,EAAQI,EAAG0C,MAAM8I,iBACrB,GAAI5L,EAAO,KAAOA,EAAMuC,QAAQ,CAC9B,IAAI/B,EAAUR,EAAM6H,QAChB1H,EAAQK,EAAQmG,OACpB,GAAIxG,EACF,OAAAH,EAAM2C,KAAKnC,GACJJ,EAAGkJ,aAAanJ,EAAMqB,KAAMrB,EAAMsB,GAAE,CAGnD,EAEEP,EAAK2K,aAAe,SAASzL,GAC3B,IAAIJ,EAAQI,EAAG0C,MAAM8I,iBACrB,GAAI5L,EAAO,KAAOA,EAAMuC,QAAQ,CAC9BvC,EAAM8L,QAAQ9L,EAAM4C,OACpB,IAAIpC,EAAQR,EAAMA,EAAMuC,OAAS,GAAGoE,OACpC,GAAKnG,EAGH,OAAOJ,EAAGkJ,aAAa9I,EAAMgB,KAAMhB,EAAMiB,IAFzCzB,EAAM4C,KAEqC,CAEnD,EAEE1B,EAAK6K,eAAiB,SAAS3L,GAG7B,IAAK,IAFDJ,EAASI,EAAG8C,iBACZ1C,EAAQJ,EAAG0C,MAAM8I,mBAAqBxL,EAAG0C,MAAM8I,iBAAmB,IAC7DzL,EAAI,EAAGA,EAAIH,EAAOuC,OAAQpC,IAAK,CAGtC,IAAK,IAFDO,EAAOV,EAAOG,GAAGqB,OAAQnB,EAAKL,EAAOG,GAAGsB,KACxCpC,EAAQW,EAAOG,GAAGgD,QAAU/C,EAAG4L,YAAYtL,GAAQN,EAAG6L,UAAUvL,EAAML,GACjEiB,EAAI,EAAGA,EAAIjC,EAAMkD,OAAQjB,IAChC,GAAIjC,EAAMiC,GAAG4K,gBAAiB,CAC5B7M,EAAMiC,GAAGoC,QACT,IAAK,IAAI3C,EAAI,EAAGA,EAAIP,EAAM+B,OAAQxB,IAC5BP,EAAMO,IAAM1B,EAAMiC,IACpBd,EAAM2L,OAAOpL,IAAK,GACtB,MAGAO,GAAKjC,EAAMkD,QACb/B,EAAMmC,KAAKvC,EAAGiD,SAAS3C,EAAML,EAAI,CAAC6L,iBAAiB,EAAME,gBAAgB,IAAO,CAExF,EAEElL,EAAKmL,eAAiB,SAASjM,GAC7B,IAAIJ,EAAQI,EAAG0C,MAAM8I,iBACrB,GAAI5L,EAAO,IAAK,IAAIQ,EAAI,EAAGA,EAAIR,EAAMuC,OAAQ/B,IAAKR,EAAMQ,GAAGkD,QAC3D1D,EAAMuC,OAAS,CACnB,EAEErB,EAAKoL,gBAAkB,SAASlM,GAC9B,IAAIJ,EAAQI,EAAG0C,MAAM8I,iBAAkBpL,EAAS,GAChD,GAAIR,EAAO,IAAK,IAAIG,EAAI,EAAGA,EAAIH,EAAMuC,OAAQpC,IAAK,CAChD,IAAIO,EAAQV,EAAMG,GAAGwG,OAChBjG,EAGHF,EAAOmC,KAAK,CAACyE,OAAQ1G,EAAMc,KAAM4B,KAAM1C,EAAMe,KAF7CzB,EAAMmM,OAAOhM,IAAK,EAAC,CAInBK,EAAO+B,QACTnC,EAAGiH,cAAc7G,EAAQ,EAC/B,EAEW8B,EAAAmD,EAAA,yBAmBTvE,EAAKqL,eAAiB,SAASnM,GAC7B,GAAIA,EAAGyI,oBAAqB,OAAO/H,EAAWkH,KAE9C5H,EAAGqD,WAAU,WAIX,IAAK,IAHDzD,EAAUI,EAAG8C,iBACb1C,EAAaJ,EAAGoM,UAAU,cAErBrM,EAAIH,EAAQuC,OAAS,EAAGpC,GAAK,EAAGA,IAAK,CAC5C,IAAIO,EAASV,EAAQG,GAAGiD,KACpB/C,EAAgBD,EAAG0J,SAAS,CAACvJ,KAAMG,EAAOH,KAAME,GAAI,GAAIC,GACxDrB,EAASyB,EAAW2L,YAAYpM,EAAe,KAAMD,EAAGoM,UAAU,YAGlElL,EAAYlB,EAAGsM,SAAShM,GAAS,EAAG,QAAQ,GAEhD,GAAIL,IAAkB,KAAKd,KAAKc,IAAkBhB,EAASmB,GAAc,EAAG,CAC1E,IAAIO,EAAa,IAAIyC,EAAI9C,EAAOH,KAC9BO,EAAW6L,WAAWtM,EAAehB,EAASmB,EAAYA,IAGxDO,EAAWN,IAAMC,EAAOD,KAAIa,EAAYP,EAAA,CAG9CX,EAAG4G,aAAa,GAAI1F,EAAWZ,EAAQ,UAAS,CAExD,GACA,EAEEQ,EAAK0L,aAAe,SAASxM,GAC3BA,EAAGqD,WAAU,WAEX,IAAK,IADDzD,EAASI,EAAG8C,iBACP1C,EAAIR,EAAOuC,OAAS,EAAG/B,GAAK,EAAGA,IACtCJ,EAAG4G,aAAa,GAAIhH,EAAOQ,GAAG4G,OAAQ5D,EAAIxD,EAAOQ,GAAGiB,KAAKlB,MAAO,WAClEH,EAAG0K,gBACT,GACA,EAEE5J,EAAK2L,eAAiB,SAASzM,GAC7BqF,EAAsBrF,GAAI,SAASJ,GAAO,OAAOA,EAAI0H,aAAc,GACvE,EACExG,EAAK4L,iBAAmB,SAAS1M,GAC/BqF,EAAsBrF,GAAI,SAASJ,GAAO,OAAOA,EAAIyG,aAAc,GACvE,EAEEvF,EAAK6L,eAAiB,SAAS3M,GACzBA,EAAG0C,MAAMkK,aAAa5M,EAAG0C,MAAMkK,YAAYtJ,QAC/CtD,EAAG0C,MAAMkK,YAAc5M,EAAG6M,YAAY7M,EAAG+G,YAC7C,EACEjG,EAAKgM,oBAAsB,SAAS9M,GAClC,IAAIJ,EAAQI,EAAG0C,MAAMkK,aAAe5M,EAAG0C,MAAMkK,YAAYrG,OACrD3G,GAAOI,EAAGkJ,aAAalJ,EAAG+G,YAAanH,EAC/C,EACEkB,EAAKiM,oBAAsB,SAAS/M,GAClC,IAAIJ,EAAQI,EAAG0C,MAAMkK,aAAe5M,EAAG0C,MAAMkK,YAAYrG,OACzD,GAAI3G,EAAO,CACT,IAAIQ,EAAOJ,EAAG+G,YAAahH,EAAKH,EAChC,GAAIc,EAAW+F,OAAOrG,EAAML,GAAM,EAAG,CAAE,IAAIO,EAAMP,EAAIA,EAAKK,EAAMA,EAAOE,CAAA,CACvEN,EAAG0C,MAAMsK,cAAgBhN,EAAG0J,SAAStJ,EAAML,GAC3CC,EAAG4G,aAAa,GAAIxG,EAAML,EAAE,CAElC,EACEe,EAAKmM,oBAAsB,SAASjN,GAClC,IAAIJ,EAAQI,EAAG0C,MAAMkK,aAAe5M,EAAG0C,MAAMkK,YAAYrG,OACrD3G,IACFI,EAAG0C,MAAMkK,YAAYtJ,QACrBtD,EAAG0C,MAAMkK,YAAc5M,EAAG6M,YAAY7M,EAAG+G,aACzC/G,EAAGkN,UAAUtN,GAEnB,EACEkB,EAAKqM,YAAc,SAASnN,GACI,MAA1BA,EAAG0C,MAAMsK,eACXhN,EAAGoN,iBAAiBpN,EAAG0C,MAAMsK,cAAe,KAAM,QACxD,EAEElM,EAAKuM,aAAe,SAASrN,GAC3B,IAAIJ,EAAMI,EAAGmI,aAAa,KAAM,SAChCnI,EAAG6I,SAAS,MAAOjJ,EAAI+I,IAAM/I,EAAI0N,QAAU,EAAItN,EAAGwI,gBAAgBI,aAAe,EACrF,EAEW1G,EAAAiF,EAAA,aAWAjF,EAAAsD,EAAA,eAiBT1E,EAAKyM,UAAY,SAASvN,GAAMwF,EAAYxF,GAAI,EAAI,EACpDc,EAAK0M,kBAAoB,SAASxN,GAAMwF,EAAYxF,GAAG,EAAK,EAC5Dc,EAAK2M,aAAe,SAASzN,GAC3B,IAAIJ,EAASuH,EAAUnH,GACvB,GAAKJ,EAIL,SAHIQ,EAAMJ,EAAG8G,gBAAgBlH,EAAOyK,OAChCtK,EAAU,GACVO,GAAgB,EACbF,EAAIkG,YACTvG,EAAQwC,KAAK,CAACyE,OAAQ5G,EAAIgB,OAAQ4B,KAAM5C,EAAIiB,OACxCjB,EAAIgB,OAAOjB,MAAQP,EAAOwB,KAAKjB,MAAQC,EAAIgB,OAAOf,IAAMT,EAAOwB,KAAKf,IACtEC,IAEJN,EAAGiH,cAAclH,EAASO,EAAY,CAC1C,EAGE,IAAImF,EAAS/E,EAAWgN,OACxBjI,EAAOkI,WAAa,CAClB,WAAY,mBACZ,YAAa,aACb,eAAgB,aAChB,QAAS,YACT,YAAa,gBACb,aAAc,iBACd,cAAe,eACf,gBAAiB,iBACjB,QAAS,aACT,cAAe,uBACfC,IAAO,qBACP,YAAa,kBACb,kBAAmB,mBACnB,QAAS,uBACT,kBAAmB,cACnB,cAAe,wBACf,QAAS,cACT,cAAe,aACf,gBAAiB,eACjB,QAAS,wBACT,QAAS,YACT,cAAe,gBACfC,GAAM,YACN,WAAY,mBACZ,SAAU,uBACV,eAAgB,8BAChBC,GAAM,eACN,WAAY,eACZ,SAAU,iBACV,eAAgB,iBAChB,SAAU,kBACVC,UAAa,iBACb,cAAe,8BACf,cAAe,eACf,cAAe,iBACf,cAAe,mBACf,kBAAmB,iBACnB,cAAe,sBACf,cAAe,sBACf,cAAe,sBACf,cAAe,cACf,cAAe,eACf,cAAe,iBACf,sBAAuB,cACvB,cAAe,UACf,cAAe,YACf,cAAe,YACf,gBAAiB,sBACjB,kBAAmB,sBACnB,SAAU,YACV,eAAgB,oBAChB,SAAU,eACV,cAAe,OACf,cAAe,SACf,QAAS,kBACT,cAAe,yBACf,QAAS,UACTC,GAAM,WACN,WAAY,WACZC,YAAe,cAEjBvN,EAAWwN,gBAAgBzI,EAAOkI,YAElClI,EAAO0I,UAAY,CACjB,YAAa,aACb,eAAgB,aAChB,QAAS,YACT,SAAU,iBACV,WAAY,gBACZ,YAAa,iBACb,UAAW,eACX,YAAa,iBACb,SAAU,aACV,eAAgB,uBAChBP,IAAO,qBACP,aAAc,kBACd,mBAAoB,mBACpB,SAAU,uBACV,mBAAoB,cACpB,eAAgB,wBAChB,SAAU,cACV,gBAAiB,aACjB,kBAAmB,eACnB,SAAU,wBACV,SAAU,YACV,eAAgB,gBAChBQ,GAAM,YACN,WAAY,mBACZ,UAAW,uBACX,gBAAiB,8BACjBN,GAAM,eACN,WAAY,eACZ,UAAW,iBACX,gBAAiB,iBACjB,SAAU,kBACVC,UAAa,iBACb,gBAAiB,8BACjB,gBAAiB,eACjB,gBAAiB,iBACjB,gBAAiB,mBACjB,oBAAqB,iBACrB,gBAAiB,sBACjB,gBAAiB,sBACjB,gBAAiB,sBACjB,gBAAiB,cACjB,gBAAiB,eACjB,gBAAiB,iBACjB,wBAAyB,cACzB,gBAAiB,UACjB,gBAAiB,YACjB,gBAAiB,YACjB,cAAe,sBACf,gBAAiB,sBACjB,UAAW,YACX,gBAAiB,oBACjB,SAAU,eACV,eAAgB,OAChB,eAAgB,SAChB,SAAU,kBACV,eAAgB,yBAChB,SAAU,UACVC,GAAM,WACN,WAAY,WACZC,YAAe,aAEjBvN,EAAWwN,gBAAgBzI,EAAO0I,WAElC,IAAI/L,EAAMqD,EAAO4I,SAAW5I,EAAO6I,WACnC7I,EAAO8I,QAAUnM,EAAMqD,EAAOkI,WAAalI,EAAO0I,SACpD,CAvsBIzN,EAAI8N,EAAAA,EAAAA,MAA8BpJ,EAAAA,EAAAA,MAAyCqJ,EAAAA,EAAAA,M","sources":["../node_modules/node_modules/codemirror/addon/edit/matchbrackets.js","../node_modules/node_modules/codemirror/addon/search/searchcursor.js","../node_modules/node_modules/codemirror/keymap/sublime.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  var ie_lt8 = /MSIE \\d/.test(navigator.userAgent) &&\n    (document.documentMode == null || document.documentMode < 8);\n\n  var Pos = CodeMirror.Pos;\n\n  var matching = {\"(\": \")>\", \")\": \"(<\", \"[\": \"]>\", \"]\": \"[<\", \"{\": \"}>\", \"}\": \"{<\", \"<\": \">>\", \">\": \"<<\"};\n\n  function bracketRegex(config) {\n    return config && config.bracketRegex || /[(){}[\\]]/\n  }\n\n  function findMatchingBracket(cm, where, config) {\n    var line = cm.getLineHandle(where.line), pos = where.ch - 1;\n    var afterCursor = config && config.afterCursor\n    if (afterCursor == null)\n      afterCursor = /(^| )cm-fat-cursor($| )/.test(cm.getWrapperElement().className)\n    var re = bracketRegex(config)\n\n    // A cursor is defined as between two characters, but in in vim command mode\n    // (i.e. not insert mode), the cursor is visually represented as a\n    // highlighted box on top of the 2nd character. Otherwise, we allow matches\n    // from before or after the cursor.\n    var match = (!afterCursor && pos >= 0 && re.test(line.text.charAt(pos)) && matching[line.text.charAt(pos)]) ||\n        re.test(line.text.charAt(pos + 1)) && matching[line.text.charAt(++pos)];\n    if (!match) return null;\n    var dir = match.charAt(1) == \">\" ? 1 : -1;\n    if (config && config.strict && (dir > 0) != (pos == where.ch)) return null;\n    var style = cm.getTokenTypeAt(Pos(where.line, pos + 1));\n\n    var found = scanForBracket(cm, Pos(where.line, pos + (dir > 0 ? 1 : 0)), dir, style, config);\n    if (found == null) return null;\n    return {from: Pos(where.line, pos), to: found && found.pos,\n            match: found && found.ch == match.charAt(0), forward: dir > 0};\n  }\n\n  // bracketRegex is used to specify which type of bracket to scan\n  // should be a regexp, e.g. /[[\\]]/\n  //\n  // Note: If \"where\" is on an open bracket, then this bracket is ignored.\n  //\n  // Returns false when no bracket was found, null when it reached\n  // maxScanLines and gave up\n  function scanForBracket(cm, where, dir, style, config) {\n    var maxScanLen = (config && config.maxScanLineLength) || 10000;\n    var maxScanLines = (config && config.maxScanLines) || 1000;\n\n    var stack = [];\n    var re = bracketRegex(config)\n    var lineEnd = dir > 0 ? Math.min(where.line + maxScanLines, cm.lastLine() + 1)\n                          : Math.max(cm.firstLine() - 1, where.line - maxScanLines);\n    for (var lineNo = where.line; lineNo != lineEnd; lineNo += dir) {\n      var line = cm.getLine(lineNo);\n      if (!line) continue;\n      var pos = dir > 0 ? 0 : line.length - 1, end = dir > 0 ? line.length : -1;\n      if (line.length > maxScanLen) continue;\n      if (lineNo == where.line) pos = where.ch - (dir < 0 ? 1 : 0);\n      for (; pos != end; pos += dir) {\n        var ch = line.charAt(pos);\n        if (re.test(ch) && (style === undefined ||\n                            (cm.getTokenTypeAt(Pos(lineNo, pos + 1)) || \"\") == (style || \"\"))) {\n          var match = matching[ch];\n          if (match && (match.charAt(1) == \">\") == (dir > 0)) stack.push(ch);\n          else if (!stack.length) return {pos: Pos(lineNo, pos), ch: ch};\n          else stack.pop();\n        }\n      }\n    }\n    return lineNo - dir == (dir > 0 ? cm.lastLine() : cm.firstLine()) ? false : null;\n  }\n\n  function matchBrackets(cm, autoclear, config) {\n    // Disable brace matching in long lines, since it'll cause hugely slow updates\n    var maxHighlightLen = cm.state.matchBrackets.maxHighlightLineLength || 1000,\n      highlightNonMatching = config && config.highlightNonMatching;\n    var marks = [], ranges = cm.listSelections();\n    for (var i = 0; i < ranges.length; i++) {\n      var match = ranges[i].empty() && findMatchingBracket(cm, ranges[i].head, config);\n      if (match && (match.match || highlightNonMatching !== false) && cm.getLine(match.from.line).length <= maxHighlightLen) {\n        var style = match.match ? \"CodeMirror-matchingbracket\" : \"CodeMirror-nonmatchingbracket\";\n        marks.push(cm.markText(match.from, Pos(match.from.line, match.from.ch + 1), {className: style}));\n        if (match.to && cm.getLine(match.to.line).length <= maxHighlightLen)\n          marks.push(cm.markText(match.to, Pos(match.to.line, match.to.ch + 1), {className: style}));\n      }\n    }\n\n    if (marks.length) {\n      // Kludge to work around the IE bug from issue #1193, where text\n      // input stops going to the textarea whenever this fires.\n      if (ie_lt8 && cm.state.focused) cm.focus();\n\n      var clear = function() {\n        cm.operation(function() {\n          for (var i = 0; i < marks.length; i++) marks[i].clear();\n        });\n      };\n      if (autoclear) setTimeout(clear, 800);\n      else return clear;\n    }\n  }\n\n  function doMatchBrackets(cm) {\n    cm.operation(function() {\n      if (cm.state.matchBrackets.currentlyHighlighted) {\n        cm.state.matchBrackets.currentlyHighlighted();\n        cm.state.matchBrackets.currentlyHighlighted = null;\n      }\n      cm.state.matchBrackets.currentlyHighlighted = matchBrackets(cm, false, cm.state.matchBrackets);\n    });\n  }\n\n  function clearHighlighted(cm) {\n    if (cm.state.matchBrackets && cm.state.matchBrackets.currentlyHighlighted) {\n      cm.state.matchBrackets.currentlyHighlighted();\n      cm.state.matchBrackets.currentlyHighlighted = null;\n    }\n  }\n\n  CodeMirror.defineOption(\"matchBrackets\", false, function(cm, val, old) {\n    if (old && old != CodeMirror.Init) {\n      cm.off(\"cursorActivity\", doMatchBrackets);\n      cm.off(\"focus\", doMatchBrackets)\n      cm.off(\"blur\", clearHighlighted)\n      clearHighlighted(cm);\n    }\n    if (val) {\n      cm.state.matchBrackets = typeof val == \"object\" ? val : {};\n      cm.on(\"cursorActivity\", doMatchBrackets);\n      cm.on(\"focus\", doMatchBrackets)\n      cm.on(\"blur\", clearHighlighted)\n    }\n  });\n\n  CodeMirror.defineExtension(\"matchBrackets\", function() {matchBrackets(this, true);});\n  CodeMirror.defineExtension(\"findMatchingBracket\", function(pos, config, oldConfig){\n    // Backwards-compatibility kludge\n    if (oldConfig || typeof config == \"boolean\") {\n      if (!oldConfig) {\n        config = config ? {strict: true} : null\n      } else {\n        oldConfig.strict = config\n        config = oldConfig\n      }\n    }\n    return findMatchingBracket(this, pos, config)\n  });\n  CodeMirror.defineExtension(\"scanForBracket\", function(pos, dir, style, config){\n    return scanForBracket(this, pos, dir, style, config);\n  });\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"))\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod)\n  else // Plain browser env\n    mod(CodeMirror)\n})(function(CodeMirror) {\n  \"use strict\"\n  var Pos = CodeMirror.Pos\n\n  function regexpFlags(regexp) {\n    var flags = regexp.flags\n    return flags != null ? flags : (regexp.ignoreCase ? \"i\" : \"\")\n      + (regexp.global ? \"g\" : \"\")\n      + (regexp.multiline ? \"m\" : \"\")\n  }\n\n  function ensureFlags(regexp, flags) {\n    var current = regexpFlags(regexp), target = current\n    for (var i = 0; i < flags.length; i++) if (target.indexOf(flags.charAt(i)) == -1)\n      target += flags.charAt(i)\n    return current == target ? regexp : new RegExp(regexp.source, target)\n  }\n\n  function maybeMultiline(regexp) {\n    return /\\\\s|\\\\n|\\n|\\\\W|\\\\D|\\[\\^/.test(regexp.source)\n  }\n\n  function searchRegexpForward(doc, regexp, start) {\n    regexp = ensureFlags(regexp, \"g\")\n    for (var line = start.line, ch = start.ch, last = doc.lastLine(); line <= last; line++, ch = 0) {\n      regexp.lastIndex = ch\n      var string = doc.getLine(line), match = regexp.exec(string)\n      if (match)\n        return {from: Pos(line, match.index),\n                to: Pos(line, match.index + match[0].length),\n                match: match}\n    }\n  }\n\n  function searchRegexpForwardMultiline(doc, regexp, start) {\n    if (!maybeMultiline(regexp)) return searchRegexpForward(doc, regexp, start)\n\n    regexp = ensureFlags(regexp, \"gm\")\n    var string, chunk = 1\n    for (var line = start.line, last = doc.lastLine(); line <= last;) {\n      // This grows the search buffer in exponentially-sized chunks\n      // between matches, so that nearby matches are fast and don't\n      // require concatenating the whole document (in case we're\n      // searching for something that has tons of matches), but at the\n      // same time, the amount of retries is limited.\n      for (var i = 0; i < chunk; i++) {\n        if (line > last) break\n        var curLine = doc.getLine(line++)\n        string = string == null ? curLine : string + \"\\n\" + curLine\n      }\n      chunk = chunk * 2\n      regexp.lastIndex = start.ch\n      var match = regexp.exec(string)\n      if (match) {\n        var before = string.slice(0, match.index).split(\"\\n\"), inside = match[0].split(\"\\n\")\n        var startLine = start.line + before.length - 1, startCh = before[before.length - 1].length\n        return {from: Pos(startLine, startCh),\n                to: Pos(startLine + inside.length - 1,\n                        inside.length == 1 ? startCh + inside[0].length : inside[inside.length - 1].length),\n                match: match}\n      }\n    }\n  }\n\n  function lastMatchIn(string, regexp, endMargin) {\n    var match, from = 0\n    while (from <= string.length) {\n      regexp.lastIndex = from\n      var newMatch = regexp.exec(string)\n      if (!newMatch) break\n      var end = newMatch.index + newMatch[0].length\n      if (end > string.length - endMargin) break\n      if (!match || end > match.index + match[0].length)\n        match = newMatch\n      from = newMatch.index + 1\n    }\n    return match\n  }\n\n  function searchRegexpBackward(doc, regexp, start) {\n    regexp = ensureFlags(regexp, \"g\")\n    for (var line = start.line, ch = start.ch, first = doc.firstLine(); line >= first; line--, ch = -1) {\n      var string = doc.getLine(line)\n      var match = lastMatchIn(string, regexp, ch < 0 ? 0 : string.length - ch)\n      if (match)\n        return {from: Pos(line, match.index),\n                to: Pos(line, match.index + match[0].length),\n                match: match}\n    }\n  }\n\n  function searchRegexpBackwardMultiline(doc, regexp, start) {\n    if (!maybeMultiline(regexp)) return searchRegexpBackward(doc, regexp, start)\n    regexp = ensureFlags(regexp, \"gm\")\n    var string, chunkSize = 1, endMargin = doc.getLine(start.line).length - start.ch\n    for (var line = start.line, first = doc.firstLine(); line >= first;) {\n      for (var i = 0; i < chunkSize && line >= first; i++) {\n        var curLine = doc.getLine(line--)\n        string = string == null ? curLine : curLine + \"\\n\" + string\n      }\n      chunkSize *= 2\n\n      var match = lastMatchIn(string, regexp, endMargin)\n      if (match) {\n        var before = string.slice(0, match.index).split(\"\\n\"), inside = match[0].split(\"\\n\")\n        var startLine = line + before.length, startCh = before[before.length - 1].length\n        return {from: Pos(startLine, startCh),\n                to: Pos(startLine + inside.length - 1,\n                        inside.length == 1 ? startCh + inside[0].length : inside[inside.length - 1].length),\n                match: match}\n      }\n    }\n  }\n\n  var doFold, noFold\n  if (String.prototype.normalize) {\n    doFold = function(str) { return str.normalize(\"NFD\").toLowerCase() }\n    noFold = function(str) { return str.normalize(\"NFD\") }\n  } else {\n    doFold = function(str) { return str.toLowerCase() }\n    noFold = function(str) { return str }\n  }\n\n  // Maps a position in a case-folded line back to a position in the original line\n  // (compensating for codepoints increasing in number during folding)\n  function adjustPos(orig, folded, pos, foldFunc) {\n    if (orig.length == folded.length) return pos\n    for (var min = 0, max = pos + Math.max(0, orig.length - folded.length);;) {\n      if (min == max) return min\n      var mid = (min + max) >> 1\n      var len = foldFunc(orig.slice(0, mid)).length\n      if (len == pos) return mid\n      else if (len > pos) max = mid\n      else min = mid + 1\n    }\n  }\n\n  function searchStringForward(doc, query, start, caseFold) {\n    // Empty string would match anything and never progress, so we\n    // define it to match nothing instead.\n    if (!query.length) return null\n    var fold = caseFold ? doFold : noFold\n    var lines = fold(query).split(/\\r|\\n\\r?/)\n\n    search: for (var line = start.line, ch = start.ch, last = doc.lastLine() + 1 - lines.length; line <= last; line++, ch = 0) {\n      var orig = doc.getLine(line).slice(ch), string = fold(orig)\n      if (lines.length == 1) {\n        var found = string.indexOf(lines[0])\n        if (found == -1) continue search\n        var start = adjustPos(orig, string, found, fold) + ch\n        return {from: Pos(line, adjustPos(orig, string, found, fold) + ch),\n                to: Pos(line, adjustPos(orig, string, found + lines[0].length, fold) + ch)}\n      } else {\n        var cutFrom = string.length - lines[0].length\n        if (string.slice(cutFrom) != lines[0]) continue search\n        for (var i = 1; i < lines.length - 1; i++)\n          if (fold(doc.getLine(line + i)) != lines[i]) continue search\n        var end = doc.getLine(line + lines.length - 1), endString = fold(end), lastLine = lines[lines.length - 1]\n        if (endString.slice(0, lastLine.length) != lastLine) continue search\n        return {from: Pos(line, adjustPos(orig, string, cutFrom, fold) + ch),\n                to: Pos(line + lines.length - 1, adjustPos(end, endString, lastLine.length, fold))}\n      }\n    }\n  }\n\n  function searchStringBackward(doc, query, start, caseFold) {\n    if (!query.length) return null\n    var fold = caseFold ? doFold : noFold\n    var lines = fold(query).split(/\\r|\\n\\r?/)\n\n    search: for (var line = start.line, ch = start.ch, first = doc.firstLine() - 1 + lines.length; line >= first; line--, ch = -1) {\n      var orig = doc.getLine(line)\n      if (ch > -1) orig = orig.slice(0, ch)\n      var string = fold(orig)\n      if (lines.length == 1) {\n        var found = string.lastIndexOf(lines[0])\n        if (found == -1) continue search\n        return {from: Pos(line, adjustPos(orig, string, found, fold)),\n                to: Pos(line, adjustPos(orig, string, found + lines[0].length, fold))}\n      } else {\n        var lastLine = lines[lines.length - 1]\n        if (string.slice(0, lastLine.length) != lastLine) continue search\n        for (var i = 1, start = line - lines.length + 1; i < lines.length - 1; i++)\n          if (fold(doc.getLine(start + i)) != lines[i]) continue search\n        var top = doc.getLine(line + 1 - lines.length), topString = fold(top)\n        if (topString.slice(topString.length - lines[0].length) != lines[0]) continue search\n        return {from: Pos(line + 1 - lines.length, adjustPos(top, topString, top.length - lines[0].length, fold)),\n                to: Pos(line, adjustPos(orig, string, lastLine.length, fold))}\n      }\n    }\n  }\n\n  function SearchCursor(doc, query, pos, options) {\n    this.atOccurrence = false\n    this.afterEmptyMatch = false\n    this.doc = doc\n    pos = pos ? doc.clipPos(pos) : Pos(0, 0)\n    this.pos = {from: pos, to: pos}\n\n    var caseFold\n    if (typeof options == \"object\") {\n      caseFold = options.caseFold\n    } else { // Backwards compat for when caseFold was the 4th argument\n      caseFold = options\n      options = null\n    }\n\n    if (typeof query == \"string\") {\n      if (caseFold == null) caseFold = false\n      this.matches = function(reverse, pos) {\n        return (reverse ? searchStringBackward : searchStringForward)(doc, query, pos, caseFold)\n      }\n    } else {\n      query = ensureFlags(query, \"gm\")\n      if (!options || options.multiline !== false)\n        this.matches = function(reverse, pos) {\n          return (reverse ? searchRegexpBackwardMultiline : searchRegexpForwardMultiline)(doc, query, pos)\n        }\n      else\n        this.matches = function(reverse, pos) {\n          return (reverse ? searchRegexpBackward : searchRegexpForward)(doc, query, pos)\n        }\n    }\n  }\n\n  SearchCursor.prototype = {\n    findNext: function() {return this.find(false)},\n    findPrevious: function() {return this.find(true)},\n\n    find: function(reverse) {\n      var head = this.doc.clipPos(reverse ? this.pos.from : this.pos.to);\n      if (this.afterEmptyMatch && this.atOccurrence) {\n        // do not return the same 0 width match twice\n        head = Pos(head.line, head.ch)\n        if (reverse) {\n          head.ch--;\n          if (head.ch < 0) {\n            head.line--;\n            head.ch = (this.doc.getLine(head.line) || \"\").length;\n          }\n        } else {\n          head.ch++;\n          if (head.ch > (this.doc.getLine(head.line) || \"\").length) {\n            head.ch = 0;\n            head.line++;\n          }\n        }\n        if (CodeMirror.cmpPos(head, this.doc.clipPos(head)) != 0) {\n           return this.atOccurrence = false\n        }\n      }\n      var result = this.matches(reverse, head)\n      this.afterEmptyMatch = result && CodeMirror.cmpPos(result.from, result.to) == 0\n\n      if (result) {\n        this.pos = result\n        this.atOccurrence = true\n        return this.pos.match || true\n      } else {\n        var end = Pos(reverse ? this.doc.firstLine() : this.doc.lastLine() + 1, 0)\n        this.pos = {from: end, to: end}\n        return this.atOccurrence = false\n      }\n    },\n\n    from: function() {if (this.atOccurrence) return this.pos.from},\n    to: function() {if (this.atOccurrence) return this.pos.to},\n\n    replace: function(newText, origin) {\n      if (!this.atOccurrence) return\n      var lines = CodeMirror.splitLines(newText)\n      this.doc.replaceRange(lines, this.pos.from, this.pos.to, origin)\n      this.pos.to = Pos(this.pos.from.line + lines.length - 1,\n                        lines[lines.length - 1].length + (lines.length == 1 ? this.pos.from.ch : 0))\n    }\n  }\n\n  CodeMirror.defineExtension(\"getSearchCursor\", function(query, pos, caseFold) {\n    return new SearchCursor(this.doc, query, pos, caseFold)\n  })\n  CodeMirror.defineDocExtension(\"getSearchCursor\", function(query, pos, caseFold) {\n    return new SearchCursor(this, query, pos, caseFold)\n  })\n\n  CodeMirror.defineExtension(\"selectMatches\", function(query, caseFold) {\n    var ranges = []\n    var cur = this.getSearchCursor(query, this.getCursor(\"from\"), caseFold)\n    while (cur.findNext()) {\n      if (CodeMirror.cmpPos(cur.to(), this.getCursor(\"to\")) > 0) break\n      ranges.push({anchor: cur.from(), head: cur.to()})\n    }\n    if (ranges.length)\n      this.setSelections(ranges, 0)\n  })\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n// A rough approximation of Sublime Text's keybindings\n// Depends on addon/search/searchcursor.js and optionally addon/dialog/dialogs.js\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../lib/codemirror\"), require(\"../addon/search/searchcursor\"), require(\"../addon/edit/matchbrackets\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../lib/codemirror\", \"../addon/search/searchcursor\", \"../addon/edit/matchbrackets\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var cmds = CodeMirror.commands;\n  var Pos = CodeMirror.Pos;\n\n  // This is not exactly Sublime's algorithm. I couldn't make heads or tails of that.\n  function findPosSubword(doc, start, dir) {\n    if (dir < 0 && start.ch == 0) return doc.clipPos(Pos(start.line - 1));\n    var line = doc.getLine(start.line);\n    if (dir > 0 && start.ch >= line.length) return doc.clipPos(Pos(start.line + 1, 0));\n    var state = \"start\", type, startPos = start.ch;\n    for (var pos = startPos, e = dir < 0 ? 0 : line.length, i = 0; pos != e; pos += dir, i++) {\n      var next = line.charAt(dir < 0 ? pos - 1 : pos);\n      var cat = next != \"_\" && CodeMirror.isWordChar(next) ? \"w\" : \"o\";\n      if (cat == \"w\" && next.toUpperCase() == next) cat = \"W\";\n      if (state == \"start\") {\n        if (cat != \"o\") { state = \"in\"; type = cat; }\n        else startPos = pos + dir\n      } else if (state == \"in\") {\n        if (type != cat) {\n          if (type == \"w\" && cat == \"W\" && dir < 0) pos--;\n          if (type == \"W\" && cat == \"w\" && dir > 0) { // From uppercase to lowercase\n            if (pos == startPos + 1) { type = \"w\"; continue; }\n            else pos--;\n          }\n          break;\n        }\n      }\n    }\n    return Pos(start.line, pos);\n  }\n\n  function moveSubword(cm, dir) {\n    cm.extendSelectionsBy(function(range) {\n      if (cm.display.shift || cm.doc.extend || range.empty())\n        return findPosSubword(cm.doc, range.head, dir);\n      else\n        return dir < 0 ? range.from() : range.to();\n    });\n  }\n\n  cmds.goSubwordLeft = function(cm) { moveSubword(cm, -1); };\n  cmds.goSubwordRight = function(cm) { moveSubword(cm, 1); };\n\n  cmds.scrollLineUp = function(cm) {\n    var info = cm.getScrollInfo();\n    if (!cm.somethingSelected()) {\n      var visibleBottomLine = cm.lineAtHeight(info.top + info.clientHeight, \"local\");\n      if (cm.getCursor().line >= visibleBottomLine)\n        cm.execCommand(\"goLineUp\");\n    }\n    cm.scrollTo(null, info.top - cm.defaultTextHeight());\n  };\n  cmds.scrollLineDown = function(cm) {\n    var info = cm.getScrollInfo();\n    if (!cm.somethingSelected()) {\n      var visibleTopLine = cm.lineAtHeight(info.top, \"local\")+1;\n      if (cm.getCursor().line <= visibleTopLine)\n        cm.execCommand(\"goLineDown\");\n    }\n    cm.scrollTo(null, info.top + cm.defaultTextHeight());\n  };\n\n  cmds.splitSelectionByLine = function(cm) {\n    var ranges = cm.listSelections(), lineRanges = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var from = ranges[i].from(), to = ranges[i].to();\n      for (var line = from.line; line <= to.line; ++line)\n        if (!(to.line > from.line && line == to.line && to.ch == 0))\n          lineRanges.push({anchor: line == from.line ? from : Pos(line, 0),\n                           head: line == to.line ? to : Pos(line)});\n    }\n    cm.setSelections(lineRanges, 0);\n  };\n\n  cmds.singleSelectionTop = function(cm) {\n    var range = cm.listSelections()[0];\n    cm.setSelection(range.anchor, range.head, {scroll: false});\n  };\n\n  cmds.selectLine = function(cm) {\n    var ranges = cm.listSelections(), extended = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i];\n      extended.push({anchor: Pos(range.from().line, 0),\n                     head: Pos(range.to().line + 1, 0)});\n    }\n    cm.setSelections(extended);\n  };\n\n  function insertLine(cm, above) {\n    if (cm.isReadOnly()) return CodeMirror.Pass\n    cm.operation(function() {\n      var len = cm.listSelections().length, newSelection = [], last = -1;\n      for (var i = 0; i < len; i++) {\n        var head = cm.listSelections()[i].head;\n        if (head.line <= last) continue;\n        var at = Pos(head.line + (above ? 0 : 1), 0);\n        cm.replaceRange(\"\\n\", at, null, \"+insertLine\");\n        cm.indentLine(at.line, null, true);\n        newSelection.push({head: at, anchor: at});\n        last = head.line + 1;\n      }\n      cm.setSelections(newSelection);\n    });\n    cm.execCommand(\"indentAuto\");\n  }\n\n  cmds.insertLineAfter = function(cm) { return insertLine(cm, false); };\n\n  cmds.insertLineBefore = function(cm) { return insertLine(cm, true); };\n\n  function wordAt(cm, pos) {\n    var start = pos.ch, end = start, line = cm.getLine(pos.line);\n    while (start && CodeMirror.isWordChar(line.charAt(start - 1))) --start;\n    while (end < line.length && CodeMirror.isWordChar(line.charAt(end))) ++end;\n    return {from: Pos(pos.line, start), to: Pos(pos.line, end), word: line.slice(start, end)};\n  }\n\n  cmds.selectNextOccurrence = function(cm) {\n    var from = cm.getCursor(\"from\"), to = cm.getCursor(\"to\");\n    var fullWord = cm.state.sublimeFindFullWord == cm.doc.sel;\n    if (CodeMirror.cmpPos(from, to) == 0) {\n      var word = wordAt(cm, from);\n      if (!word.word) return;\n      cm.setSelection(word.from, word.to);\n      fullWord = true;\n    } else {\n      var text = cm.getRange(from, to);\n      var query = fullWord ? new RegExp(\"\\\\b\" + text + \"\\\\b\") : text;\n      var cur = cm.getSearchCursor(query, to);\n      var found = cur.findNext();\n      if (!found) {\n        cur = cm.getSearchCursor(query, Pos(cm.firstLine(), 0));\n        found = cur.findNext();\n      }\n      if (!found || isSelectedRange(cm.listSelections(), cur.from(), cur.to())) return\n      cm.addSelection(cur.from(), cur.to());\n    }\n    if (fullWord)\n      cm.state.sublimeFindFullWord = cm.doc.sel;\n  };\n\n  cmds.skipAndSelectNextOccurrence = function(cm) {\n    var prevAnchor = cm.getCursor(\"anchor\"), prevHead = cm.getCursor(\"head\");\n    cmds.selectNextOccurrence(cm);\n    if (CodeMirror.cmpPos(prevAnchor, prevHead) != 0) {\n      cm.doc.setSelections(cm.doc.listSelections()\n          .filter(function (sel) {\n            return sel.anchor != prevAnchor || sel.head != prevHead;\n          }));\n    }\n  }\n\n  function addCursorToSelection(cm, dir) {\n    var ranges = cm.listSelections(), newRanges = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i];\n      var newAnchor = cm.findPosV(\n          range.anchor, dir, \"line\", range.anchor.goalColumn);\n      var newHead = cm.findPosV(\n          range.head, dir, \"line\", range.head.goalColumn);\n      newAnchor.goalColumn = range.anchor.goalColumn != null ?\n          range.anchor.goalColumn : cm.cursorCoords(range.anchor, \"div\").left;\n      newHead.goalColumn = range.head.goalColumn != null ?\n          range.head.goalColumn : cm.cursorCoords(range.head, \"div\").left;\n      var newRange = {anchor: newAnchor, head: newHead};\n      newRanges.push(range);\n      newRanges.push(newRange);\n    }\n    cm.setSelections(newRanges);\n  }\n  cmds.addCursorToPrevLine = function(cm) { addCursorToSelection(cm, -1); };\n  cmds.addCursorToNextLine = function(cm) { addCursorToSelection(cm, 1); };\n\n  function isSelectedRange(ranges, from, to) {\n    for (var i = 0; i < ranges.length; i++)\n      if (CodeMirror.cmpPos(ranges[i].from(), from) == 0 &&\n          CodeMirror.cmpPos(ranges[i].to(), to) == 0) return true\n    return false\n  }\n\n  var mirror = \"(){}[]\";\n  function selectBetweenBrackets(cm) {\n    var ranges = cm.listSelections(), newRanges = []\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i], pos = range.head, opening = cm.scanForBracket(pos, -1);\n      if (!opening) return false;\n      for (;;) {\n        var closing = cm.scanForBracket(pos, 1);\n        if (!closing) return false;\n        if (closing.ch == mirror.charAt(mirror.indexOf(opening.ch) + 1)) {\n          var startPos = Pos(opening.pos.line, opening.pos.ch + 1);\n          if (CodeMirror.cmpPos(startPos, range.from()) == 0 &&\n              CodeMirror.cmpPos(closing.pos, range.to()) == 0) {\n            opening = cm.scanForBracket(opening.pos, -1);\n            if (!opening) return false;\n          } else {\n            newRanges.push({anchor: startPos, head: closing.pos});\n            break;\n          }\n        }\n        pos = Pos(closing.pos.line, closing.pos.ch + 1);\n      }\n    }\n    cm.setSelections(newRanges);\n    return true;\n  }\n\n  cmds.selectScope = function(cm) {\n    selectBetweenBrackets(cm) || cm.execCommand(\"selectAll\");\n  };\n  cmds.selectBetweenBrackets = function(cm) {\n    if (!selectBetweenBrackets(cm)) return CodeMirror.Pass;\n  };\n\n  function puncType(type) {\n    return !type ? null : /\\bpunctuation\\b/.test(type) ? type : undefined\n  }\n\n  cmds.goToBracket = function(cm) {\n    cm.extendSelectionsBy(function(range) {\n      var next = cm.scanForBracket(range.head, 1, puncType(cm.getTokenTypeAt(range.head)));\n      if (next && CodeMirror.cmpPos(next.pos, range.head) != 0) return next.pos;\n      var prev = cm.scanForBracket(range.head, -1, puncType(cm.getTokenTypeAt(Pos(range.head.line, range.head.ch + 1))));\n      return prev && Pos(prev.pos.line, prev.pos.ch + 1) || range.head;\n    });\n  };\n\n  cmds.swapLineUp = function(cm) {\n    if (cm.isReadOnly()) return CodeMirror.Pass\n    var ranges = cm.listSelections(), linesToMove = [], at = cm.firstLine() - 1, newSels = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i], from = range.from().line - 1, to = range.to().line;\n      newSels.push({anchor: Pos(range.anchor.line - 1, range.anchor.ch),\n                    head: Pos(range.head.line - 1, range.head.ch)});\n      if (range.to().ch == 0 && !range.empty()) --to;\n      if (from > at) linesToMove.push(from, to);\n      else if (linesToMove.length) linesToMove[linesToMove.length - 1] = to;\n      at = to;\n    }\n    cm.operation(function() {\n      for (var i = 0; i < linesToMove.length; i += 2) {\n        var from = linesToMove[i], to = linesToMove[i + 1];\n        var line = cm.getLine(from);\n        cm.replaceRange(\"\", Pos(from, 0), Pos(from + 1, 0), \"+swapLine\");\n        if (to > cm.lastLine())\n          cm.replaceRange(\"\\n\" + line, Pos(cm.lastLine()), null, \"+swapLine\");\n        else\n          cm.replaceRange(line + \"\\n\", Pos(to, 0), null, \"+swapLine\");\n      }\n      cm.setSelections(newSels);\n      cm.scrollIntoView();\n    });\n  };\n\n  cmds.swapLineDown = function(cm) {\n    if (cm.isReadOnly()) return CodeMirror.Pass\n    var ranges = cm.listSelections(), linesToMove = [], at = cm.lastLine() + 1;\n    for (var i = ranges.length - 1; i >= 0; i--) {\n      var range = ranges[i], from = range.to().line + 1, to = range.from().line;\n      if (range.to().ch == 0 && !range.empty()) from--;\n      if (from < at) linesToMove.push(from, to);\n      else if (linesToMove.length) linesToMove[linesToMove.length - 1] = to;\n      at = to;\n    }\n    cm.operation(function() {\n      for (var i = linesToMove.length - 2; i >= 0; i -= 2) {\n        var from = linesToMove[i], to = linesToMove[i + 1];\n        var line = cm.getLine(from);\n        if (from == cm.lastLine())\n          cm.replaceRange(\"\", Pos(from - 1), Pos(from), \"+swapLine\");\n        else\n          cm.replaceRange(\"\", Pos(from, 0), Pos(from + 1, 0), \"+swapLine\");\n        cm.replaceRange(line + \"\\n\", Pos(to, 0), null, \"+swapLine\");\n      }\n      cm.scrollIntoView();\n    });\n  };\n\n  cmds.toggleCommentIndented = function(cm) {\n    cm.toggleComment({ indent: true });\n  }\n\n  cmds.joinLines = function(cm) {\n    var ranges = cm.listSelections(), joined = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i], from = range.from();\n      var start = from.line, end = range.to().line;\n      while (i < ranges.length - 1 && ranges[i + 1].from().line == end)\n        end = ranges[++i].to().line;\n      joined.push({start: start, end: end, anchor: !range.empty() && from});\n    }\n    cm.operation(function() {\n      var offset = 0, ranges = [];\n      for (var i = 0; i < joined.length; i++) {\n        var obj = joined[i];\n        var anchor = obj.anchor && Pos(obj.anchor.line - offset, obj.anchor.ch), head;\n        for (var line = obj.start; line <= obj.end; line++) {\n          var actual = line - offset;\n          if (line == obj.end) head = Pos(actual, cm.getLine(actual).length + 1);\n          if (actual < cm.lastLine()) {\n            cm.replaceRange(\" \", Pos(actual), Pos(actual + 1, /^\\s*/.exec(cm.getLine(actual + 1))[0].length));\n            ++offset;\n          }\n        }\n        ranges.push({anchor: anchor || head, head: head});\n      }\n      cm.setSelections(ranges, 0);\n    });\n  };\n\n  cmds.duplicateLine = function(cm) {\n    cm.operation(function() {\n      var rangeCount = cm.listSelections().length;\n      for (var i = 0; i < rangeCount; i++) {\n        var range = cm.listSelections()[i];\n        if (range.empty())\n          cm.replaceRange(cm.getLine(range.head.line) + \"\\n\", Pos(range.head.line, 0));\n        else\n          cm.replaceRange(cm.getRange(range.from(), range.to()), range.from());\n      }\n      cm.scrollIntoView();\n    });\n  };\n\n\n  function sortLines(cm, caseSensitive, direction) {\n    if (cm.isReadOnly()) return CodeMirror.Pass\n    var ranges = cm.listSelections(), toSort = [], selected;\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i];\n      if (range.empty()) continue;\n      var from = range.from().line, to = range.to().line;\n      while (i < ranges.length - 1 && ranges[i + 1].from().line == to)\n        to = ranges[++i].to().line;\n      if (!ranges[i].to().ch) to--;\n      toSort.push(from, to);\n    }\n    if (toSort.length) selected = true;\n    else toSort.push(cm.firstLine(), cm.lastLine());\n\n    cm.operation(function() {\n      var ranges = [];\n      for (var i = 0; i < toSort.length; i += 2) {\n        var from = toSort[i], to = toSort[i + 1];\n        var start = Pos(from, 0), end = Pos(to);\n        var lines = cm.getRange(start, end, false);\n        if (caseSensitive)\n          lines.sort(function(a, b) { return a < b ? -direction : a == b ? 0 : direction; });\n        else\n          lines.sort(function(a, b) {\n            var au = a.toUpperCase(), bu = b.toUpperCase();\n            if (au != bu) { a = au; b = bu; }\n            return a < b ? -direction : a == b ? 0 : direction;\n          });\n        cm.replaceRange(lines, start, end);\n        if (selected) ranges.push({anchor: start, head: Pos(to + 1, 0)});\n      }\n      if (selected) cm.setSelections(ranges, 0);\n    });\n  }\n\n  cmds.sortLines = function(cm) { sortLines(cm, true, 1); };\n  cmds.reverseSortLines = function(cm) { sortLines(cm, true, -1); };\n  cmds.sortLinesInsensitive = function(cm) { sortLines(cm, false, 1); };\n  cmds.reverseSortLinesInsensitive = function(cm) { sortLines(cm, false, -1); };\n\n  cmds.nextBookmark = function(cm) {\n    var marks = cm.state.sublimeBookmarks;\n    if (marks) while (marks.length) {\n      var current = marks.shift();\n      var found = current.find();\n      if (found) {\n        marks.push(current);\n        return cm.setSelection(found.from, found.to);\n      }\n    }\n  };\n\n  cmds.prevBookmark = function(cm) {\n    var marks = cm.state.sublimeBookmarks;\n    if (marks) while (marks.length) {\n      marks.unshift(marks.pop());\n      var found = marks[marks.length - 1].find();\n      if (!found)\n        marks.pop();\n      else\n        return cm.setSelection(found.from, found.to);\n    }\n  };\n\n  cmds.toggleBookmark = function(cm) {\n    var ranges = cm.listSelections();\n    var marks = cm.state.sublimeBookmarks || (cm.state.sublimeBookmarks = []);\n    for (var i = 0; i < ranges.length; i++) {\n      var from = ranges[i].from(), to = ranges[i].to();\n      var found = ranges[i].empty() ? cm.findMarksAt(from) : cm.findMarks(from, to);\n      for (var j = 0; j < found.length; j++) {\n        if (found[j].sublimeBookmark) {\n          found[j].clear();\n          for (var k = 0; k < marks.length; k++)\n            if (marks[k] == found[j])\n              marks.splice(k--, 1);\n          break;\n        }\n      }\n      if (j == found.length)\n        marks.push(cm.markText(from, to, {sublimeBookmark: true, clearWhenEmpty: false}));\n    }\n  };\n\n  cmds.clearBookmarks = function(cm) {\n    var marks = cm.state.sublimeBookmarks;\n    if (marks) for (var i = 0; i < marks.length; i++) marks[i].clear();\n    marks.length = 0;\n  };\n\n  cmds.selectBookmarks = function(cm) {\n    var marks = cm.state.sublimeBookmarks, ranges = [];\n    if (marks) for (var i = 0; i < marks.length; i++) {\n      var found = marks[i].find();\n      if (!found)\n        marks.splice(i--, 0);\n      else\n        ranges.push({anchor: found.from, head: found.to});\n    }\n    if (ranges.length)\n      cm.setSelections(ranges, 0);\n  };\n\n  function modifyWordOrSelection(cm, mod) {\n    cm.operation(function() {\n      var ranges = cm.listSelections(), indices = [], replacements = [];\n      for (var i = 0; i < ranges.length; i++) {\n        var range = ranges[i];\n        if (range.empty()) { indices.push(i); replacements.push(\"\"); }\n        else replacements.push(mod(cm.getRange(range.from(), range.to())));\n      }\n      cm.replaceSelections(replacements, \"around\", \"case\");\n      for (var i = indices.length - 1, at; i >= 0; i--) {\n        var range = ranges[indices[i]];\n        if (at && CodeMirror.cmpPos(range.head, at) > 0) continue;\n        var word = wordAt(cm, range.head);\n        at = word.from;\n        cm.replaceRange(mod(word.word), word.from, word.to);\n      }\n    });\n  }\n\n  cmds.smartBackspace = function(cm) {\n    if (cm.somethingSelected()) return CodeMirror.Pass;\n\n    cm.operation(function() {\n      var cursors = cm.listSelections();\n      var indentUnit = cm.getOption(\"indentUnit\");\n\n      for (var i = cursors.length - 1; i >= 0; i--) {\n        var cursor = cursors[i].head;\n        var toStartOfLine = cm.getRange({line: cursor.line, ch: 0}, cursor);\n        var column = CodeMirror.countColumn(toStartOfLine, null, cm.getOption(\"tabSize\"));\n\n        // Delete by one character by default\n        var deletePos = cm.findPosH(cursor, -1, \"char\", false);\n\n        if (toStartOfLine && !/\\S/.test(toStartOfLine) && column % indentUnit == 0) {\n          var prevIndent = new Pos(cursor.line,\n            CodeMirror.findColumn(toStartOfLine, column - indentUnit, indentUnit));\n\n          // Smart delete only if we found a valid prevIndent location\n          if (prevIndent.ch != cursor.ch) deletePos = prevIndent;\n        }\n\n        cm.replaceRange(\"\", deletePos, cursor, \"+delete\");\n      }\n    });\n  };\n\n  cmds.delLineRight = function(cm) {\n    cm.operation(function() {\n      var ranges = cm.listSelections();\n      for (var i = ranges.length - 1; i >= 0; i--)\n        cm.replaceRange(\"\", ranges[i].anchor, Pos(ranges[i].to().line), \"+delete\");\n      cm.scrollIntoView();\n    });\n  };\n\n  cmds.upcaseAtCursor = function(cm) {\n    modifyWordOrSelection(cm, function(str) { return str.toUpperCase(); });\n  };\n  cmds.downcaseAtCursor = function(cm) {\n    modifyWordOrSelection(cm, function(str) { return str.toLowerCase(); });\n  };\n\n  cmds.setSublimeMark = function(cm) {\n    if (cm.state.sublimeMark) cm.state.sublimeMark.clear();\n    cm.state.sublimeMark = cm.setBookmark(cm.getCursor());\n  };\n  cmds.selectToSublimeMark = function(cm) {\n    var found = cm.state.sublimeMark && cm.state.sublimeMark.find();\n    if (found) cm.setSelection(cm.getCursor(), found);\n  };\n  cmds.deleteToSublimeMark = function(cm) {\n    var found = cm.state.sublimeMark && cm.state.sublimeMark.find();\n    if (found) {\n      var from = cm.getCursor(), to = found;\n      if (CodeMirror.cmpPos(from, to) > 0) { var tmp = to; to = from; from = tmp; }\n      cm.state.sublimeKilled = cm.getRange(from, to);\n      cm.replaceRange(\"\", from, to);\n    }\n  };\n  cmds.swapWithSublimeMark = function(cm) {\n    var found = cm.state.sublimeMark && cm.state.sublimeMark.find();\n    if (found) {\n      cm.state.sublimeMark.clear();\n      cm.state.sublimeMark = cm.setBookmark(cm.getCursor());\n      cm.setCursor(found);\n    }\n  };\n  cmds.sublimeYank = function(cm) {\n    if (cm.state.sublimeKilled != null)\n      cm.replaceSelection(cm.state.sublimeKilled, null, \"paste\");\n  };\n\n  cmds.showInCenter = function(cm) {\n    var pos = cm.cursorCoords(null, \"local\");\n    cm.scrollTo(null, (pos.top + pos.bottom) / 2 - cm.getScrollInfo().clientHeight / 2);\n  };\n\n  function getTarget(cm) {\n    var from = cm.getCursor(\"from\"), to = cm.getCursor(\"to\");\n    if (CodeMirror.cmpPos(from, to) == 0) {\n      var word = wordAt(cm, from);\n      if (!word.word) return;\n      from = word.from;\n      to = word.to;\n    }\n    return {from: from, to: to, query: cm.getRange(from, to), word: word};\n  }\n\n  function findAndGoTo(cm, forward) {\n    var target = getTarget(cm);\n    if (!target) return;\n    var query = target.query;\n    var cur = cm.getSearchCursor(query, forward ? target.to : target.from);\n\n    if (forward ? cur.findNext() : cur.findPrevious()) {\n      cm.setSelection(cur.from(), cur.to());\n    } else {\n      cur = cm.getSearchCursor(query, forward ? Pos(cm.firstLine(), 0)\n                                              : cm.clipPos(Pos(cm.lastLine())));\n      if (forward ? cur.findNext() : cur.findPrevious())\n        cm.setSelection(cur.from(), cur.to());\n      else if (target.word)\n        cm.setSelection(target.from, target.to);\n    }\n  };\n  cmds.findUnder = function(cm) { findAndGoTo(cm, true); };\n  cmds.findUnderPrevious = function(cm) { findAndGoTo(cm,false); };\n  cmds.findAllUnder = function(cm) {\n    var target = getTarget(cm);\n    if (!target) return;\n    var cur = cm.getSearchCursor(target.query);\n    var matches = [];\n    var primaryIndex = -1;\n    while (cur.findNext()) {\n      matches.push({anchor: cur.from(), head: cur.to()});\n      if (cur.from().line <= target.from.line && cur.from().ch <= target.from.ch)\n        primaryIndex++;\n    }\n    cm.setSelections(matches, primaryIndex);\n  };\n\n\n  var keyMap = CodeMirror.keyMap;\n  keyMap.macSublime = {\n    \"Cmd-Left\": \"goLineStartSmart\",\n    \"Shift-Tab\": \"indentLess\",\n    \"Shift-Ctrl-K\": \"deleteLine\",\n    \"Alt-Q\": \"wrapLines\",\n    \"Ctrl-Left\": \"goSubwordLeft\",\n    \"Ctrl-Right\": \"goSubwordRight\",\n    \"Ctrl-Alt-Up\": \"scrollLineUp\",\n    \"Ctrl-Alt-Down\": \"scrollLineDown\",\n    \"Cmd-L\": \"selectLine\",\n    \"Shift-Cmd-L\": \"splitSelectionByLine\",\n    \"Esc\": \"singleSelectionTop\",\n    \"Cmd-Enter\": \"insertLineAfter\",\n    \"Shift-Cmd-Enter\": \"insertLineBefore\",\n    \"Cmd-D\": \"selectNextOccurrence\",\n    \"Shift-Cmd-Space\": \"selectScope\",\n    \"Shift-Cmd-M\": \"selectBetweenBrackets\",\n    \"Cmd-M\": \"goToBracket\",\n    \"Cmd-Ctrl-Up\": \"swapLineUp\",\n    \"Cmd-Ctrl-Down\": \"swapLineDown\",\n    \"Cmd-/\": \"toggleCommentIndented\",\n    \"Cmd-J\": \"joinLines\",\n    \"Shift-Cmd-D\": \"duplicateLine\",\n    \"F5\": \"sortLines\",\n    \"Shift-F5\": \"reverseSortLines\",\n    \"Cmd-F5\": \"sortLinesInsensitive\",\n    \"Shift-Cmd-F5\": \"reverseSortLinesInsensitive\",\n    \"F2\": \"nextBookmark\",\n    \"Shift-F2\": \"prevBookmark\",\n    \"Cmd-F2\": \"toggleBookmark\",\n    \"Shift-Cmd-F2\": \"clearBookmarks\",\n    \"Alt-F2\": \"selectBookmarks\",\n    \"Backspace\": \"smartBackspace\",\n    \"Cmd-K Cmd-D\": \"skipAndSelectNextOccurrence\",\n    \"Cmd-K Cmd-K\": \"delLineRight\",\n    \"Cmd-K Cmd-U\": \"upcaseAtCursor\",\n    \"Cmd-K Cmd-L\": \"downcaseAtCursor\",\n    \"Cmd-K Cmd-Space\": \"setSublimeMark\",\n    \"Cmd-K Cmd-A\": \"selectToSublimeMark\",\n    \"Cmd-K Cmd-W\": \"deleteToSublimeMark\",\n    \"Cmd-K Cmd-X\": \"swapWithSublimeMark\",\n    \"Cmd-K Cmd-Y\": \"sublimeYank\",\n    \"Cmd-K Cmd-C\": \"showInCenter\",\n    \"Cmd-K Cmd-G\": \"clearBookmarks\",\n    \"Cmd-K Cmd-Backspace\": \"delLineLeft\",\n    \"Cmd-K Cmd-1\": \"foldAll\",\n    \"Cmd-K Cmd-0\": \"unfoldAll\",\n    \"Cmd-K Cmd-J\": \"unfoldAll\",\n    \"Ctrl-Shift-Up\": \"addCursorToPrevLine\",\n    \"Ctrl-Shift-Down\": \"addCursorToNextLine\",\n    \"Cmd-F3\": \"findUnder\",\n    \"Shift-Cmd-F3\": \"findUnderPrevious\",\n    \"Alt-F3\": \"findAllUnder\",\n    \"Shift-Cmd-[\": \"fold\",\n    \"Shift-Cmd-]\": \"unfold\",\n    \"Cmd-I\": \"findIncremental\",\n    \"Shift-Cmd-I\": \"findIncrementalReverse\",\n    \"Cmd-H\": \"replace\",\n    \"F3\": \"findNext\",\n    \"Shift-F3\": \"findPrev\",\n    \"fallthrough\": \"macDefault\"\n  };\n  CodeMirror.normalizeKeyMap(keyMap.macSublime);\n\n  keyMap.pcSublime = {\n    \"Shift-Tab\": \"indentLess\",\n    \"Shift-Ctrl-K\": \"deleteLine\",\n    \"Alt-Q\": \"wrapLines\",\n    \"Ctrl-T\": \"transposeChars\",\n    \"Alt-Left\": \"goSubwordLeft\",\n    \"Alt-Right\": \"goSubwordRight\",\n    \"Ctrl-Up\": \"scrollLineUp\",\n    \"Ctrl-Down\": \"scrollLineDown\",\n    \"Ctrl-L\": \"selectLine\",\n    \"Shift-Ctrl-L\": \"splitSelectionByLine\",\n    \"Esc\": \"singleSelectionTop\",\n    \"Ctrl-Enter\": \"insertLineAfter\",\n    \"Shift-Ctrl-Enter\": \"insertLineBefore\",\n    \"Ctrl-D\": \"selectNextOccurrence\",\n    \"Shift-Ctrl-Space\": \"selectScope\",\n    \"Shift-Ctrl-M\": \"selectBetweenBrackets\",\n    \"Ctrl-M\": \"goToBracket\",\n    \"Shift-Ctrl-Up\": \"swapLineUp\",\n    \"Shift-Ctrl-Down\": \"swapLineDown\",\n    \"Ctrl-/\": \"toggleCommentIndented\",\n    \"Ctrl-J\": \"joinLines\",\n    \"Shift-Ctrl-D\": \"duplicateLine\",\n    \"F9\": \"sortLines\",\n    \"Shift-F9\": \"reverseSortLines\",\n    \"Ctrl-F9\": \"sortLinesInsensitive\",\n    \"Shift-Ctrl-F9\": \"reverseSortLinesInsensitive\",\n    \"F2\": \"nextBookmark\",\n    \"Shift-F2\": \"prevBookmark\",\n    \"Ctrl-F2\": \"toggleBookmark\",\n    \"Shift-Ctrl-F2\": \"clearBookmarks\",\n    \"Alt-F2\": \"selectBookmarks\",\n    \"Backspace\": \"smartBackspace\",\n    \"Ctrl-K Ctrl-D\": \"skipAndSelectNextOccurrence\",\n    \"Ctrl-K Ctrl-K\": \"delLineRight\",\n    \"Ctrl-K Ctrl-U\": \"upcaseAtCursor\",\n    \"Ctrl-K Ctrl-L\": \"downcaseAtCursor\",\n    \"Ctrl-K Ctrl-Space\": \"setSublimeMark\",\n    \"Ctrl-K Ctrl-A\": \"selectToSublimeMark\",\n    \"Ctrl-K Ctrl-W\": \"deleteToSublimeMark\",\n    \"Ctrl-K Ctrl-X\": \"swapWithSublimeMark\",\n    \"Ctrl-K Ctrl-Y\": \"sublimeYank\",\n    \"Ctrl-K Ctrl-C\": \"showInCenter\",\n    \"Ctrl-K Ctrl-G\": \"clearBookmarks\",\n    \"Ctrl-K Ctrl-Backspace\": \"delLineLeft\",\n    \"Ctrl-K Ctrl-1\": \"foldAll\",\n    \"Ctrl-K Ctrl-0\": \"unfoldAll\",\n    \"Ctrl-K Ctrl-J\": \"unfoldAll\",\n    \"Ctrl-Alt-Up\": \"addCursorToPrevLine\",\n    \"Ctrl-Alt-Down\": \"addCursorToNextLine\",\n    \"Ctrl-F3\": \"findUnder\",\n    \"Shift-Ctrl-F3\": \"findUnderPrevious\",\n    \"Alt-F3\": \"findAllUnder\",\n    \"Shift-Ctrl-[\": \"fold\",\n    \"Shift-Ctrl-]\": \"unfold\",\n    \"Ctrl-I\": \"findIncremental\",\n    \"Shift-Ctrl-I\": \"findIncrementalReverse\",\n    \"Ctrl-H\": \"replace\",\n    \"F3\": \"findNext\",\n    \"Shift-F3\": \"findPrev\",\n    \"fallthrough\": \"pcDefault\"\n  };\n  CodeMirror.normalizeKeyMap(keyMap.pcSublime);\n\n  var mac = keyMap.default == keyMap.macDefault;\n  keyMap.sublime = mac ? keyMap.macSublime : keyMap.pcSublime;\n});\n"],"names":["o","S","test","navigator","userAgent","document","documentMode","g","Pos","p","A","t","bracketRegex","b","r","e","i","getLineHandle","line","n","ch","l","afterCursor","getWrapperElement","className","h","u","text","charAt","a","strict","k","getTokenTypeAt","s","H","from","to","pos","match","forward","maxScanLineLength","maxScanLines","Math","min","lastLine","max","firstLine","c","getLine","v","length","q","d","m","push","pop","M","state","matchBrackets","maxHighlightLineLength","highlightNonMatching","listSelections","empty","head","markText","focused","focus","f","operation","clear","setTimeout","x","currentlyHighlighted","B","defineOption","Init","off","on","defineExtension","this","F","T","exports","P","flags","ignoreCase","global","multiline","indexOf","RegExp","source","R","I","lastIndex","exec","index","j","slice","split","z","D","L","y","O","C","lastIndexOf","w","atOccurrence","afterEmptyMatch","doc","clipPos","caseFold","matches","String","prototype","normalize","toLowerCase","findNext","find","findPrevious","cmpPos","replace","splitLines","replaceRange","defineDocExtension","getSearchCursor","getCursor","anchor","setSelections","G","N","commands","isWordChar","toUpperCase","extendSelectionsBy","display","shift","extend","isReadOnly","Pass","indentLine","execCommand","K","word","findPosV","goalColumn","cursorCoords","left","goSubwordLeft","goSubwordRight","scrollLineUp","getScrollInfo","somethingSelected","lineAtHeight","top","clientHeight","scrollTo","defaultTextHeight","scrollLineDown","splitSelectionByLine","singleSelectionTop","setSelection","scroll","selectLine","insertLineAfter","insertLineBefore","selectNextOccurrence","sublimeFindFullWord","sel","getRange","addSelection","skipAndSelectNextOccurrence","filter","addCursorToPrevLine","addCursorToNextLine","U","scanForBracket","sort","W","replaceSelections","query","selectScope","selectBetweenBrackets","goToBracket","swapLineUp","scrollIntoView","swapLineDown","toggleCommentIndented","toggleComment","indent","joinLines","start","end","duplicateLine","sortLines","reverseSortLines","sortLinesInsensitive","reverseSortLinesInsensitive","nextBookmark","sublimeBookmarks","prevBookmark","unshift","toggleBookmark","findMarksAt","findMarks","sublimeBookmark","splice","clearWhenEmpty","clearBookmarks","selectBookmarks","smartBackspace","getOption","countColumn","findPosH","findColumn","delLineRight","upcaseAtCursor","downcaseAtCursor","setSublimeMark","sublimeMark","setBookmark","selectToSublimeMark","deleteToSublimeMark","sublimeKilled","swapWithSublimeMark","setCursor","sublimeYank","replaceSelection","showInCenter","bottom","findUnder","findUnderPrevious","findAllUnder","keyMap","macSublime","Esc","F5","F2","Backspace","F3","fallthrough","normalizeKeyMap","pcSublime","F9","default","macDefault","sublime","Y","J"],"sourceRoot":""}